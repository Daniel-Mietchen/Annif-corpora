http://www.yso.fi/onto/yso/p25623 Android
Android Android
Painonhallintasovellus Android-käyttöjärjestelmälle
TW-200 etäkäyttösovellus
Opastusjärjestelmä automuseoon
Mobiilisovelluksen kehittäminen eläinpuistolle
Hattrick-pelin asiakasohjelman edelleenkehittäminen
Mobiilipelin toteuttaminen Unity-kehitysympäristössä : Android-käyttöjärjestelmälle
Android-käyttöjärjestelmän musiikkiominaisuudet : MusicBox-musiikkiohjelma
Android-asiakasohjelma tuntienseurantajärjestelmään
Tässä opinnäytetyössä suunniteltiin audio-opastusjärjestelmän toteutus Oulun automuseolle. Audio-opastusjärjestelmän tehtävä on tuoda museoesineestä oleva tieto käyttäjälle myös ennalta nauhoitettuna opasteena. Tavoitteena oli järjestelmän helppokäyttöisyys, monilaitesoveltuvuus ja kustannustehokkuus. Järjestelmää varten tehtiin Suomen museoille kysely, jolla kartoitettiin jo olemassa olevia järjestelmiä. Kyselyn lisäksi tutustuttiin mahdollistaviin tekniikkoihin, joista valittiin suunnitelmaa varten parhaaksi katsotut teknologiat. Lopputuloksena on suunnitelma audio-opastusjärjestelmän toteutuksesta käyttäen NFC- ja QR-tunnisteita, joita tukemaan luodaan Android-sovellus. Lopputulokseen päädyttiin järjestelmien kustannustehokkuuden takia. Suunnitelma on hyvä lähtökohta myös muille pienille museoille, jotka haluavat luoda interaktiivista sisältöä edullisesti.
FastROIn mobiilipäätelaitesovelluksen päivitys Android-alustalle
VoIP-tuki Android-käyttöjärjestelmässä
Kalustonhallintamoduuli toiminnanohjausjärjestelmään
Mobiilisovellus jääkiekon pelivirran seurantaan
Pienveneiden identifiointi mobiilisovelluksella ja tunnisteiden hallinnointi WEB-käyttöliittymällä : BoatNFC
Java-ohjelmoinnin erityispiirteet Android-pohjaisissa laitteissa
Kuurojen herätyskello : Bluetooth-ohjattu relekytkentä
Työn tavoitteena on saada suunniteltua ja kehitettyä eläinpuistolle ja sen asiakkaille mobiilisovellus. Eläinpuisto pyysi asiakkaidensa käyttöön sovellusta, josta löytyisi yleistä tietoa eläinpuistosta, sen eläimistä, uutisista ja tapahtumista. Sovelluksen tukema Android-käyttöjärjestelmän minimiversio on 2.3.3 ja kohdeversio on 4.2. Tämän työn toteuttamisessa käytetään Googlen kartta- sekä Facebookin kommentointi-palveluita. Palvelimella käytetään PHP-ohjelmointikieltä ja sovelluksen ohjelmointikielenä käytetään Javaa. Sovelluksen tietokantana käytetään SQLite- ja palvelimella MySQL-tietokantaa. Palvelinpuolen toteuttaa toinen työntekijä. Työ käyttää myös osittain sovellusyrityksen aikaisemmin tekemää koodia, joka lähinnä rajoittuu verkkopyyntöjen hallinnointiin. Sovelluksen käyttöliittymä toteutetaan suunnittelijan luomien visuaalisien mallien pohjalta. Malleissa käytetään pohjana iOS-käyttöjärjestelmän graafisia elementtejä, joista osa joudutaan luomaan uudelleen Android-käyttöjärjestelmälle. Lopputuloksena saatiin luotua toimiva sovellus, jota voidaan edelleen kehittää. Esimerkiksi sovellukseen voidaan lisätä tuki etätyönä päivittämiselle palveluntarjoajan toimesta.
Mobiiliteemojen suunnittelu Android- ja iOS-laitteille
SQLite-tietokantaa hyödyntävä Android-sovellus
Ohjelmistoyrityksen työvaiheiden automatisointi ja optimointi
Käyttöliittymäsuunnittelu Android-sovellukseen
Android- ja Bluetooth-kehitys käytännön esimerkillä
Matkakulujen raportointisovelluksen kehittäminen Android-alustalle
Lasten mobiilipäiväkirja : ChildCoach
USB-sarjamuunnin Androidille
Ketterä automaatiotestaus : Käyttäytymislähtöinen ohjelmistokehitys mobiilisovelluksen testauksessa
Graafisen käyttöliittymän suunnittelu Android-pohjaiseen laitteeseen
Tiivistelmä:Työssä suunniteltiin liike-eleitä Android-sovelluskehitys  ympäristöön sekä luotiin koodikirjasto, jonka avulla sovelluskehittäjät voivat lisätä nämä eleet omiin sovelluksiinsa kuten muut näytön asettelussa ilmoitetut komponentit. Koska sensoreiden toimintaa sekä niiden pohjalta luotuja liike-eleitä ei ole liiemmin käsitelty eri kirjallisuuslähteissä,  oli työ mielenkiintoinen ja haastava. Eleet tunnistettiin käyttämällä kiihtyvyysanturia, gyroskooppia ja kiertovektorisensoria. Magnetometriä käytettiin  laitteen asentoa laskettaessa kiertovektorisensorin toimesta. Kun eleet sisältävä Gesture- luokka oli valmis, lisättiin  kustomoidut attribuutit, kuten eleen valinta sekä Shake-eleen herkkyys XML-tiedostoon  attrs.xml. Tämän jälkeen eleet pystyttiin esittelemään näkymän asettelussa ja etsimään ne omalla  tunnisteellaan  testisovelluksen aktiviteetissä. Eleiden tunnistaminen ei ollut täysin aukotonta, mutta  kokonaisuus toimi kuitenkin kelvollisesti ja vakaasti, joten tuloksiin oltiin  kokonaisuutena tyytyväisiä. Tärkeimpänä asiana pi-  dettiin että nyt rakennettu kehyseleiden helpolle käyttämiselle oli luotu ja siinä onnistuttiin hyvin. Valmis koodikirjasto käsittää Gesture.java- sekä attrs.xml-tiedoston.
MegaSquirtin rakenne ja Android-sovelluksen kehitys
Etäohjattavan lämpötilasäätimen suunnittelu ja toteutus Arduino Ethernet -mikrokontrollerilla
Katz - Android sovelluksen toteutus ja julkaisu
Android-ohjelmiston modularisointi
Mainosratkaisut mobiilipeleille Android -alustalla
Geomagneettinen sisätilapaikannus Android älypuhelimella
Inventaariosovellus : Mäkelä Alu Oy
Tabletti-tietokone : Samsung Galaxy tab 3 - Lainataan kirjastossa käytettäväksi
Ostoslista  Android- sovelluksen kehittäminen
Etävalvontajärjestelmän kosketusnäytöllinen Android-käyttöliittymä
Fingersoft pääsi latauslistoille : oululaisfirman kamerasovellus Android-puhelimiin suosiossa
Auton mittaristosovellus WEB-kehittäjän työkaluilla
Tiivistelmä: ORM-kehys ja siihen tukeutuva laboratoriotöiden kirjausjärjestelmä älypuhelinkäyttöön. Insinöörityön aiheena oli yleiskäyttöisen ORM-kehyksen valmistaminen ja kehystä hyödyntävän laboratoriotöiden kirjausjärjestelmän rakentaminen älypuhelinkäyttöön. Tavoitteena oli saada aikaan sovellus, joka toimisi iPhone-puhelimissa ja mahdollisesti myös Android-laitteissa. Olio-relaatiokuvauksesta vastaavasta kehyksestä kirjoitettiin iOS-versio Objective-C-kielellä sekä Android-alustalla toimiva Java-kielinen versio. Applen ja Googlen älypuhelinten ekosysteemejä tutkittiin ja verrattiin toisiinsa. Saatujen kokemusten perusteella lopullinen kirjausohjelma päätettiin toteuttaa ainoastaan iPhone-puhelimelle. Ohjelmointiympäristöinä käytettiin Xcodea ja Eclipseä.Valmis sovellus testattiin iPhone-puhelimella. Android-alustalle toteutettu Java-kielinen versio tietokantakäsittelijästä testattiin Samsung Galaxy SII -laitteella koekäyttöä varten tehdyn testausaktiviteetin avulla.Olio- ja tietokeskeisen suunnittelun ansiosta sovellus noudattaa sekä MVC-arkkitehtuuria että tietokantalähtöistä kolmitasomallia. Kolmitasomalli jakaa toiminnallisuuden käyttöliittymä-, liiketoiminta- ja tietovarastokerrokseen. Ohjelmisto toteuttaa myös asiakaspalvelinarkkitehtuurin. Siirrettäessä tietoa puhelimelta palvelimelle sovellus muuttaa tietokannan sisällön XML-muotoon. Ladattaessa tietoa palvelimelta sovellus konvertoi vastaanottamansa XML-viestit SQL-lauseiksi, joilla päivitetään tietokantaa.Lopputuloksena saatiin kahdella eri älypuhelinalustalla toimiva ORM-kehys sekä iPhonella toimiva kirjausjärjestelmä. Kehys vastaa Tietomato Oy:n standardeja, se on uudelleen käytettävä ja sen toiminnot kattavat hyvin tietovarastoinnin perustarpeet. Kirjausohjelmisto täyttää sille asetetut toiminnalliset ja esteettiset vaatimukset.
Android-kirja : älypuhelimen tai tablettitietokoneen käyttäjän opas
Golfohjelman prototyypin kehitys Android-älypuhelimelle
Mobiilipelin ohjelmointi Corona SDK:lla
Mobiiliteknologian mahdollisuudet energiankulutuksen hallinnassa
Beaconien hyödyntäminen IoT-järjestelmässä
Mobiilisovelluksen laajentaminen eri alustoille : case: Onser Oy
Android -sovellus auton lämmitysjärjestelmän etäkäyttöön
OBD2-datan siirto matkapuhelimeen
Insuliinipumppu Accu-Chek Spirit Combon käyttöohje Android-mobiilikäyttöjärjestelmälle
Audiosignaalien analysointi Android-puhelimella
Sisällön jakaminen mobiilisovellukseen
Mobiilikäyttöjärjestelmien käytettävyyden arviointi
GPS-seuranta- ja kommunikointijärjestelmän suunnittelu ja toteutus
Fall Alarm : Kaatumishälytin Android-alustalle
Mobiilipelikehitys Android-älypuhelimeen AndEngine-pelimoottorin avulla
Android-karttasovellus ajoneuvoseurantaan, työajan raportointiin ja työmääräinten vastaanottamiseen
JNI rajapinnan rakentaminen Android-ympäristöön
Android sovelluksen kehittäminen
Minigolf-tulossovelluksen ohjelmointi Androidille
Qt-sovelluksen uudelleenkirjoittaminen Android-käyttöjärjestelmälle
Valonohjausjärjestelmä
Opinnäytetyön aikana valmiiksi saatu versio tulossovelluksesta ei sellaisenaan ole vielä julkaisukelpoinen, vaan sen ulkoasuun täytyisi vielä kiinnittää huomiota. Lisäksi sovelluksen toiminnallisuuteen olisi hyvä lisätä muun muassa syöttötietojen tarkistus ja tulostensyötön voisi toteuttaa hieman toisella tapaa, jotta pelaajan syöttämät tulokset tallentuisivat ratakohtaisesti tietokantaan. Tällä hetkellä sovellus tallentaa kaikkien ratojen tulokset vasta lopuksi ja tämä voi olla huono esimerkiksi silloin, jos pisteiden syöttö on pelaajalla kesken ja sovellus esimerkiksi sammutetaan jostain syystä kesken kaiken väärin. Pienten lisäysten ja korjausten jälkeen sovellus olisi vakaampi ja luotettavampi käyttää.
Android sovelluskehityksen perusteet Android Studiolla
OCR-teknologiaa hyödyntävä Android-applikaatio Greenstep Oy:lle
Flash-pohjaisen mobiilipelin toteutus Android-alustalle
Android-puhelimen firmware-etäpäivitys
Työssä tutkitaan Android-sovelluskehitystä tekemällä kirjallisuustutkimus ja toteuttamalla testisovellus. Työssä selvitetään kuinka sovelluksia kehitetään Android-alustalle, kuinka Android-sovelluskehitys eroaa normaalista sovelluskehityksestä ja kuinka sovellus julkaistaan Play-kaupassa. Teoriatausta osuudessa tutkitaan Androidin historiaa lyhyesti ja tarkastellaan Android-käyttöjärjestelmän ja Androi-sovellusten arkkitehtuuria. Teoriataustassa käsitellään myös sitä, millä ohjelmointikielillä Androidille voi kehittää sovelluksia ja mitä työkaluja näillä kielillä ohjelmointiin on olemassa. Teoriatausta ja kirjallisuustutkimus osoittavat että Java on Android-ohjelmointikielenä tuetuin ja kenties myös suosituin. Ohjelmointi Android-alustalle onnistuu myös C++- ja HTML5-ohjelmointikieliä käyttäen, mutta kuten teoriataustasta käy ilmi niiden tuki ja toimivuus vaihtelevat. Teoriataustassa läpikäyty sovelluksen rakenne todettiin päteväksi testisovelluksen lähdekoodia tutkimalla. Sovellus koostui XML-kuvauksesta, resurssitiedostoista ja Java-luokista. Sovelluksen julkaisemisesta voidaan sanoa teoriataustan ja kirjallisuustutkimuksen perusteella, että mikäli kehitetty sovellus tarjoaa jotain arvoa käyttäjälle esim. viihde- tai hyötyarvoa sen julkaisemista voidaan harkita Play-kaupassa. Play-kaupassa sovelluksen julkaiseminen koostuu Play-kauppaan rekisteröinnistä, sertifikaatin luonnista, apk-paketin luonnista. Android-sovelluskehitys ei eroa suuresti perinteisestä sovelluskehityksestä. Erot syntyvät sovellusten julkaisutavoista ja hieman erilaisista Java-kirjastoista. Tutkimuksen tuloksia voi käyttää esimerkiksi Android-sovelluskehitystä aloittelevat ohjelmistokehittäjät tarjoamaan kattavan kuvauksen Android-alustasta, sekä pohjana sovelluskehityksen opettelulle. Suositeltavaa olisi tutkia tarkemmin kehitysvaiheessa olevia kehitysympäristöjä kuten Googlen Android Studiota, kunhan ne valmistuvat. Tämän lisäksi HTML5:n kehittyessä ja mobiiliselainten alkaessa tukea paremmin HTML5:ttä jatkotoimenpiteinä voidaan suositella tarkempaa tarkastelua sovellusten kehittämistä Androidille HTML5:llä.
ubiPILL-lääkeannostelija : Uuden laitteen, tietokannan ja käyttöliittymän suunnittelu
Tämän opinnäytetyön tarkoituksena oli toteuttaa sähköpostin ja kalenterin synkronointiopas Android-älypuhelimeen. Android on Googlen julkaisema käyttöjärjestelmä älypuhelimille ja mobiililaitteille. Opas tehtiin Oulun ammattikorkeakoulun opiskelijoille, koska sen katsottiin olevan hyödyllinen ja nopea tapa päästä sähköpostiin muualtakin kuin koulusta ja kotona. Työn tavoite oli saavuttaa yksinkertainen ja helppokäyttöinen opas sekä oppia Androidista ja sen hyödyllisistä sovelluksista. Tässä työssä tutustuttiin myös Samsung Galaxy S -puhelimeen, älypuhelimien virustorjuntasovelluksiin ja pilvipalveluihin. Virustorjuntasovelluksista valittiin kolme suosituinta, joita vertailtiin keskenään. Pilvipalveluista taas valittiin neljä pilvipalveluntarjoajaa, joita vertailtiin keskenään. Vertailussa tarkisteltiin, miten nämä virustorjuntasovellukset ja pilvipalveluntarjoajat eroavat toisistaan ominaisuuksiltaan ja hinnoittelultaan. Lisäksi työssä tutustuttiin tarkemmin Androidin historiaan ja sen käyttöjärjestelmä versioihin. Työn tietoperusta pohjautui lähinnä Internetissä oleviin lähteisiin, koska Android on vielä niin uusi asia, ettei siitä ole kovin monia kirjoja kirjoitettu. Opinnäytetyö onnistui hyvin. Oppaassa edettiin askel askeleelta kuvakaappauksia hyödyntäen. Lopputuloksena syntyi opas, jonka tavoitteena oli saavuttaa helppokäyttöinen ja toimiva kokonai-suus. Nämä tavoitteet saavutettiin.
Multiplatform-mobiilisovelluksen kehittäminen Qt 5.2:lla
Pelin kehitys Android-alustalle
Huoltomiehen pääte BACnet ympäristöön
Sensoripohjaisten eleiden koodikirjasto Android-sovelluskehitysympäristöön
Augmented Reality -tuki paikannukseen perustuvaan palveluun
ELMERI+ Järjestelmä : Työturvallisuusauditoinnin digitalisointi
Mobiilisovellus karjatilan eläinmäärän laskentaan
Android-sovelluksen kääntäminen PhoneGap-monialustasovellukseksi
Google Places -paikannussovellus ja kaveripyynnöt sosiaalisen median järjestelmiin
Android-sovellus sekä verkkosivusto : Opinnäytetyönä Savon koulutuskuntayhtymälle
Opinnäytetyön tavoitteena oli ohjelmoida mobiilisovellus eläinmäärän laskentaan maataloudelle Jaakko Nurmisen yritykselle, joka ei ole vielä kaupparekisterissä. Päätarkoitus oli luoda sovellus, jota olisi mahdollisimman helppoa käyttää. Käyttäjä voi laskea tilansa eläinmäärän painamalla plus- tai miinuspainiketta. Tämän jälkeen käyttäjä voi sovelluksella lähettää päivittäiset tiedot sähköpostilla itselle. Tämä sovellus on ohjelmoitu Android Studio SDK-ohjelmalla. Sovellus ohjelmoitiin Java-kielellä ja lisäksi ohjelman tekemisessä on käytetty XML-tiedostoja, joiden avulla sovellusta luodaan. Sovellus on toimeksiantajan pyynnöstä saatavilla ainoastaan Android-laitteille. Sovellusta ei ehditty tekemään loppuun asti, sillä toimeksiantaja halusi sovellukseen lisää ominaisuuksia, joita ei tämän projektin aikataulussa pystytty toteuttamaan. Sovelluksen perustoiminnot tulivat valmiiksi, ja sovellus on käyttökelpoinen. Projektissa luotua sovellusta voidaan kehittää tulevaisuudessa. Toimeksiantaja voi lisätä haluamiaan toimintoja ja ominaisuuksia sovellukseen. Sovelluksen kehittämistä voi jatkaa esimerkiksi saadun käyttäjäpalautteen perusteella.
Vollego-mobiilisovellus : Android-sovellus NSBVC 2015 -rantalentopallotapahtumaan
Windows Phone 7:n ja Androidin kommunikointi
Android-kamerarajapinnan tuki automaattiseen kameratestausjärjestelmään
Ketterä automaatiotestaus : käyttäytymislähtöinen ohjelmistokehitys mobiilisovelluksen testauksessa
Opinnäytetyön aiheena oli kartoittaa vaihtoehtoisia menetelmiä Anite Finland Oy:n asiakkaiden Android-puhelimien kentällä tapahtuvan firmware-päivityspro-sessin parantamiseksi. Kartoitetuista menetelmistä tuli valita paras ja esittää se tilaajalle. Tavoitteena oli parantaa nykyistä menettelyä, joka sisältää useita ongelmakohtia. Uuden menetelmän oli tuettava Samsung-merkkisiä Android-laitteita. Työ suoritettiin etsimällä tietoa internet-lähteistä sekä keskustelemalla vaihtoehtoisista menetelmistä tilaajayrityksen asiantuntijoiden kanssa. Päätös valitusta menetelmästä tehtiin näiden keskusteluiden pohjalta. Työ laajennettiin koskemaan myös vaatimusmäärittelyn luomista, jonka avulla menetelmän kehittämisestä pyydettiin tarjouspyyntö alihankkijalta. Valittu menetelmä esitettiin tilaajalle, joka päättää sen käyttöönottamisesta saatuaan alihankkijalta toteutuksen kustannusarvion. Uusi menetelmä sisältää lukuisia parannuksia firmware-etäpäivitysprosessiin ja on tulevaisuudessa laajennettavissa myös muita toimintoja varten.
URHEILUSUORITUSTEN SEURANTA ÄLYPUHELIMELLA : Toimivan prototyypin suunnittelu ja toteutus Opinnäytetyö CENTRIA
Tämän työn tavoitteena oli tehdä helposti etäpäivitettävä Android-pohjainen mainostaulujärjestelmä Satavision Oy:lle. Yrityksellä oli tarvetta etäpäivitettäville mainostauluille, jotka tulevat heidän tuotevalikoimaansa täydentämään muita jo olemassa olevia tuotteita. Työn puitteissa tutustuttiin mm. Android-ohjelmointiin, PHP-ohjelmointiin sekä web-pohjaisen hallintapaneelin rakentamiseen. Työssä tutuksi tulivat Andoid, Java, XML, JSON, PHP, HTML, CSS, JavaScript, MySQL-tietokannat ja työkaluina toimivat Eclipse, Notepad++ ja XAMPP. Työssä tutustuttiin myös digitaalisen mainonnan maailmaan. Työ eteni sille asetetun aikatauluin puitteissa hyvin ja pahempia viivästyksiä ei tullut. Työn tuloksena aikaan saatiin toimiva prototyyppi etäpäivitettävästä mainostaulujärjestelmästä, jota voidaan hyödyntää kaikenlaisissa liike -ja toimitiloissa.
Etäpäivitettävä mainostaulujärjestelmä
Seurantajärjestelmä diabeteksen omahoitoon
Oppinäytetyön tavoitteena oli suunnitella ja toteuttaa Android-sovellus, jonka avulla voidaan tallentaa muistioita. Muistioiden tallennuksen tuli olla mahdollisimman sujuvaa, eikä siitä saa aiheutua käyttäjälle turhia latausaikoja, vaikka muistion koko olisi suuri. Työ tehtiin Softeri Oy:lle, joka toimi projektin tilaajana ja toimeksiantajana. Työ aloitettiin tutustumalla Android-ohjelmointiin, PHP-ohjelmointiin sekä toimeksiantajan ohjelmistoalustaan. Ensimmäinen vaihe työstä oli Web-sovellus, johon rakennettiin sekä muistioiden hallintapaneeli että rajapinnat kommunikoimaan Android-sovelluksen kanssa. Toisessa vaiheessa valmistettiin Android-sovellus. Työkaluina projektissa toimivat NetBeans ja Eclipse. Työ eteni aikataulun mukaan. Opinnäytetyön tuloksena syntyi MediaMemo-Android-sovelluksen versio 1.0. Sovelluksen rinnalle asennettiin myös Web-sovellus, josta voidaan hallita tallennettuja muistiota.
Mobiilisovelluskehitys
Opinnäytetyön aiheena oli muuntaa Symbianille tehty mobiilisovellus Qt:lla monialustaiseksi skaalautuvaksi sovellukseksi. Muunnettu ohjelmisto on Daisyperhepäivähoitosovellus, jolla voidaan hoitaa lasten päivähoitoon liittyviä asioita mobiilisti. Tässä työssä sovellus muunnettiin toimimaan sekä Android- että iOSkäyttöjärjestelmissä. Ohjelmointi toteutettiin Qt 5.2 -ohjelmointiympäristössä. Käyttöliittymät ohjelmoitiin QML:llä ja toiminnallisuus C++:lla. JNI-ominaisuudet ohjelmoitiin Javalla. Työn aiheena ollut mobiilisovellus saatiin muunnettua monialustaiseksi skaalautuvaksi sovellukseksi ja sille asetetut tavoitteet saavutettiin.
Työssä suunniteltiin järjestelmä, jossa siirretään useilta fyysisesti eri paikoissa sijaitsevilta mittauspaikoilta automaattisesti päivittyvää mittausdataa palvelimelle sekä jaetaan datapalvelimelta Android-sovellukselle käyttäen Google Cloud Messaging for Android -palvelua. Työ jakautui kahteen vaiheeseen. Ensimmäisessä osassa suunniteltiin siirtomekanismi mittauspaikalta palvelimelle. Jälkimmäisessä osassa otettiin käyttöön Google Cloud Messaging -palvelu ja suunniteltiin palvelinohjelmisto sekä Android-sovelluksen tiedonsiirto. Työn tuloksena saatiin luotettavasti toimiva tiedonsiirtomekanismi mittauspaikalta palvelimelle sekä GCM-palvelun kautta toimiva mittausdatan päivitys Android-sovellukselle.
Sähköpostin ja kalenterin määrittäminen Android-älypuhelimeen
Android-sovelluskehitys
Android käyttöjärjestelmä
Qt-sovelluskehitystyökalut Androidille
Grafiikan ohjelmointia Android-peliprojektissa (Canvas ja OpenGL ES 1.0)
Tabletti-tietokone : Samsung Galaxy tabl 4 - Lainataan kirjastossa käytettäväksi
Ohjelmointi Android-mobilialustalle
Opinnäytetyössä oli tarkoitus tutkia keinoja tehostaa mobiilisovellusten koko ohjelmistokehitystä. Useat laitealustat ja käyttöjärjestelmät ovat koettu haasteellisiksi testauksen automatisoinnille ja automaation puute lisää koko sovelluskehityksen kustannuksia. Onko olemassa toimivaa menetelmää kehittää mobiilisovelluksia kokonaisuutena, unohtamatta testausta ja sen automatisointia? Mitkä ovat mahdollisen menetelmän heikkoudet ja vahvuudet, sekä millaisia reunaehtoja kyseinen menetelmä asettaa koko kehitystyölle? Työssä tutkittiin ketteriä kehitys- ja testausmenetelmiä. Erityisesti tarkasteltiin Käyttäytymislähtöistä kehitysmenetelmää ja olisiko sillä mahdollista tehostaa mobiilisovellusten kehitystä kokonaisuutena. Tutkimus pohjaa todelliseen toimeksiantoon, jossa toteutettiin Calabash-testit mobiilisovellukselle, joka tukee kaikkia laitealustoja ja useita rajapintoja.
Ouman Plus -Android-sovellus opetuskäyttöön
Workforce-projekti sai alkunsa toimeksiantajan tarpeesta kehittää Android-älypuhelinsovellus helpottamaan työntekijän matkakustannuksien kirjaamista ja raporttointia työnantajalle. Projekti tehtiin oppimis- ja innovaatioympäristö Demolassa yhteistyössä toimeksiantajan kanssa. Projektiryhmä koostui opiskelijoista Tampereen korkeakouluista. Kirjallinen osuus kertoo projektin työvaiheista ja tuloksista sekä sovelluskehityksestä Android-älypuhelimille. Projekti saatiin vietyä loppuun suunnitellussa aikataulussa.  Vaatimusmäärittelyn mukaiset ominaisuudet saatiin pääasiallisesti toteutettua. Käyttöliittymä saatiin suunniteltua hyvin helppokäyttöiseksi, mistä kertoo myös projektin testausvaiheen positiivinen palaute. Toimeksiantaja oli tyytyväinen työn tuloksiin ja osti käyttöoikeuden sovellukseen.  Jatkossa sovellus integroidaan osaksi laajempaa järjestelmää. Jatkokehitystyöstä sovitaan jatkossa tarpeen mukaan. Kaikista vaatimusmäärittelyn ominaisuuksista matkojen automaattinen tallentaminen jätettiin tulevaan versioon. Lisäksi käyttöliittymän lokalisointi toisille kielille jätettiin toistaiseksi toteuttamatta. Sovelluksen ensimmäinen versio toteutettiin englannin kielisenä.
Verkkopalvelualustat : Tuntikirjaus verkkopalveluna ja Android-sovelluksena
Tiivistelmä.
Auton mittaristosovellus web -kehittäjän työkaluilla
Linux- ja Android-laitteiden soveltuvuus kotiautomaatiojärjestelmän käyttöliittymäksi
Android asiakasohjelma tuntienseurantajärjestelmään
Android-sovelluksen kehitys
Tämän työn tarkoituksena oli suunnitella ja tehdä peli Android-käyttöjärjestelmälle ja PC-tietokoneille. Pelin teossa käytettiin Libgdx-kehitysympäristöä, joka sisältää Box2D-fysiikkamoottorin ja OpenGL-grafiikkakirjaston. Ohjelman koodikielenä toimii Java. Suunnittelemani peli on fysiikanlakeja hyödyntävä ongelmanratkontapeli, jossa pelaajan tehtävänä on saada liikutettua pallo lähtöpisteestä A kentän toiselle puolelle loppupisteeseen B. Pelaajalla on käytössään erilaisia objekteja joiden avulla luodaan rata, jota pallo kulkee. Objektien luomisessa on otettu huomioon Android-laitteiden kosketus-näyttö ja objektit luodaan piirtämällä ne näytölle. Peli sisältää kolme kenttää ja peliin on luotu valikko, josta pelaaja voi valita mitä pelin kolmesta kentästä hän haluaa pelata. Kentissä on esteitä, jotka vaikeuttavat pallon liikkumista ja näin vaikeuttavat kenttien läpipääsyä. Kenttien vaikeustaso kasvaa pelin edetessä. Pelissä on myös kamera, jota käyttäjä pystyy zoomaamaan ja liikuttamaan, sekä taustamusiikkia ja ääniefektejä.  Tarkoituksena on tehdä peliin vielä lisää kenttiä ja objekteja ja kun peli on valmis, se aiotaan julkaista Android-käyttöjärjestelmälle Google Play -kaupassa.
ORM-kehys ja siihen tukeutuva laboratoriotöiden kirjausjärjestelmä älypuhelinkäyttöön
Taulutietokoneen räätälöinti ja sen hyödyt
Android-sovellus Ouman-laitteiden etäkäyttöön
Android-ohjelmoinnin perusteet
