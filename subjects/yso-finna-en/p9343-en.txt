http://www.yso.fi/onto/yso/p9343 source codes
source codes
Dreaming in code : two dozen programmers, three years, 4,732 bugs, and one quest for transcendent software
Open Source Automation for Hydroponics : Design, Construction, Programming and Testing
Engineering a compiler
Open source licensing : software freedom and intellectual property law
Applying usability cost-benefit analysis : explorations in commercial and open source software development contexts
Symbolic analysis as a basis for program comprehension
Joomla! for dummies
Qt Quality Visualization
Linux bible 2010 edition : boot up to Ubuntu®, Fedora®, KNOPPIX, Debian®, openSUSE®, and 13 other distributions
Game developer's open source handbook
Intents Registry Eclipse Plugin
Investigation, Installation and Implementation of an Open Source Content Management System : Joomla as a case study
Abstract: Deploying an open source router. At the center of every network there is a router and a router is used to connect one network to another network. So a router has the responsibility of routing packets across different networks. The networks where this traffic is routed can either be located within the same proximity as that of the router or it can be miles away, for instance in another country. The aim of this project was to deploy an open source router and then customize it to carry out the exact role of commercial routers, which is to route traffic between networks. Various IP routing protocols such as RIP and OSPF were tested and in order to carry out this, a small local area network comprising of two routers and two PCs were designed. In order to experiment with this project various software and devices were needed. Some of the software needed to be downloaded and installed onto four PCs, two PCs of which were installed with an open source routing router (Quagga) and the operating system running on the PCs was the  Ubuntu Server 11.10 Server edition. The issue of compatibility between the operating system and  open-source routing router was the key point as to why Quagga and Ubuntu 11.10 server edition were chosen. The same deployment can be fully implemented by small startup companies when designing their networks. The outcome of the project showed that an open-source routing routers can be installed, configured and customized to carry out the intended purpose in a network, that is to route traffic between networks. In addition to that IP routing protocols (OSPF, RIP) worked well as expected though few problems for instance, RIPv1 worked well as compared to RIPv2 which had some shortcoming in terms of security. However the general goal of routing packets via open-source routing router (Quagga) was achieved and such project can be implemented in small companies.
Open source network management
Professional plone development : building robust, content-centric web applications with Plone 3, an open source content management system
Open source and new media artists
Deploying an Open Source Router   :  Quagga
OSS firms in international business context : opportunities and challenges from culture and piracy
Google app inventor for Android
On the socio-technical dependencies in free/libre/open source software projects
Understanding consumer brand knowledge in developing strong brands : case of Quosis Oy
Symbolic analysis and atomistic model as a basis for a program comprehension methodology
A case study of agile software engineering methods and practices in the MeeGo Harmattan open source and product context
Yhteenveto (Finnish summary)
Version control with subversion
Database programming with OpenOffice.org base & basic
Business and E-commerce in Drupal
Open source mazeball game for Windows Phone
E-commerce solution : creating a shopping cart using open sources (APACHE/MYSQL/PHP)
The definitive guide to Drupal 7
Qt quality visualization
Realtime Web Analytics
Extending the web publishing process : designing a browser-based document managing component
Study of Visual SCADA
Understanding the linux virtual memory manager
Debug it! : Find, repair, and prevent bugs in your code
Stimulus-response (S-R) tests provide a unique way to acquire information about human perception by capturing automatic responses to stimuli and attentional processes. This paper presents OpenSR, a user-centered S-R testing framework providing a graphical user interface that can be used by researchers to customize, administer, and manage one type of S-R test, the implicit association test. OpenSR provides an extensible open-source Web-based framework that is platform independent and can be implemented on most computers using any operating system. In addition, it provides capabilities for automatically generating and assigning participant identifications, assigning participants to different condition groups, tracking responses, and facilitating collecting and exporting of data. The Web technologies and languages used in creating the OpenSR framework are discussed, namely, HTML5, CSS3, JavaScript, jQuery, Twitter Bootstrap, Python, and Django. OpenSR is available for free download..
Open source : technology and policy
Technical excellence in agile software projects
Tiivistelmä: Smoke testing bench for freenest service.
Investigation,Implementation and Installation of a Content  Management System : Focus on Drupal
Semantic interoperability for IoT health systems using HL7 standard
Success factors of commercial open source software projects
An Example of a Synergistic Relationship Between Software Architecture and a Domain-Specific Language
This thesis was born out of the idea to make hydroponic food growing easier and cheaper, hydroponics is essentially the growing of plants without the use of soil. The idea of it being open source is also in keeping with the general community feeling surrounded by the hydroponic movement. The objective of the thesis was to create a working hydroponic controller, which is cheap and simple enough to build. It will monitor and control the key environmental ingredients needed for successful hydroponic growing, chiefly the pH, EC, air and water levels. Visual alarms will be raised if these go outside of predefined ranges. The controller will also be able to control external HW, such as lights, water heater and a water pump. A circuit board was developed, which will act as a shield for an Arduino 2560 board. The circuit board will help in the ease of building the system. It acts too, as a way of keeping the HW more stable, as wires will not come loose and interference will be minimised. The SW and HW design will be available for everyone to download. Knowledge of what is important in hydroponic growing was considered and these factors were used as inputs into driving the SW and HW requirements. UI usability studies were carried out to ensure that the controller would be enjoyable to use. Software design and software patterns were taken into use to make the SW more module and expandable. Investigation into any third party SW libraries was done and consideration into licensing was carried out. This thesis details the HW and SW and why certain design decisions were made. The design of the SW classes are also described as well as the overall functioning of the SW. An explanation of how to build the system is also given.
The design and implementation of a hydroponics control system
Product development : user-centred product development and design in an industrial company
An example of a synergistic relationship between software architecture and a domain-specific language
Developing, Managing and Maintaining Web Applications with Content Management Systems: Drupal and Joomla as case study
The Go programming language phrasebook
The advent of open source democracy and wikipolitics : challenges, threats and opportunities for democratic discourse
Technical Excellence in Agile Software Projects
OpenSR: an open-source stimulus-response testing framework
The definitive guide to MongoDB : the noSQL database for cloud and desktop computing
Abstract: Developing M2M applications with Mango.
Implementation of an indexing application
Individuals' use of e-mail communication genres in open source software community building
Source code optimization techniques for data flow dominated embedded software
Mining creativity research to inform design rationale in open source communities
Source code of the dissertation "Open sourcing Digital Heritage : digital surrogates, museums and knowledge management in age of open networks"
Open source software as a service : provision of open sourcesoftware components to web application developers
Preventing reverse engineering of native and managed programs
Abstract: Implementation of an indexing application.
Web application development using open source and Ruby on Rails Framework
Documentation of DOKU[at]WEB® Lite archiving solution
Using Drupal : choosing and configuring modules to build dynamic websites
Open Source Mazeball Game for Windows Phone
Open Source Database Driven Web Development : a guide for information professionals
A firm's choice from different content management systems (CMS) : case: Joomla and CMSmadeSimple
Mathematical tools in a digital world
Copy, rip, burn : the politics of open source
Content Management System Implementation Efficiency and Value
System for executing encrypted native programs
Clean code : a handbook of agile software craftsmanship
Deploying an open source router : Quagga
Enterprise portals in e-learning : [welcome to e-learning]
Applying usability cost-benefit analysis — explorations in commercial and open source software development contexts
Knowledge management in Open Source
Web content management system implementation using open source software
Network monitoring : using Nagios as an example tool
Developing M2M applications with Mango
Pragmatic version control with CVS
Open source integration to mobile network
Reciprocity under the GNU General Public licenses
Open sources 2.0 : the continuing evolution
Cross-platform GUI programming with wxWidgets
Refactoring in Ruby
The Design and Implementation of a Hydroponics Control System
Fault-proneness of open source software: Exploring its relations to internal software quality and maintenance process
Can open sourcing lead to inferior standards?
Streamlining workflow in architectural  visualization with Blender and SketchUp
Beginning PHP and MySQL : from novice to professional
LLVM toolchain support as a plug-in for Eclipse CDT
Open source as a pedagogical tool in higher education
Competitive advantage from leveraging external resources : reuse of open source software components
Flexible operating system internals :the design and implementation of the anykernel and rump kernels
Construction of Sound Models using Freely Available Data
Risk and prospects in open source : final report
Open source security tools : practical applications for security
Compilers : principles, techniques, and tools
Open source software law
Embedded Linux primer : a practical, real-world approach
Constructing a community : myths and realities of the open development model
Integrating open source distributed rendering solutions in public and closed networking environments
Smoke testing bench for freenest service
