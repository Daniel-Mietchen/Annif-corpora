http://www.yso.fi/onto/yso/p6297 software technology
software technology
Building 3D WebGL applications
Lecture notes on empirical software engineering
Designing a distributed application middleware by using Windows Communication Foundation : case: sharing data between different client applications in a sheet metal industry environment
Towards total interaction control : implementing human knowledge in interaction design
Track reconstruction software system
Android how to program
Mashup ecosystems : integrating web resources on desktop and mobile devices
Modern topics of computer science
Re-engineering of software architectures : a case-study on a Nigerian Hospital Information System
Professional iPhone and iPad application development
Abstract: Screen Capture Application : designing architecture in Symbian OS.
Practicing software engineering in the 21st century
Professional iPhone programming with MonoTouch and .NET/C#
Enhanced testing automation proof of concept for FreeNest
Managing software quality : a measurement framework for assessment and prediction
A concise introduction to software engineering
Metamodelling for software engineering
Effort estimation in DSP software projects
There is a strong relationship between the media and intellectual property. On the one hand, intellectual property goods are created because they are transmitted through the media, on the other hand media can only work by creating goods of intellectual property. The development of media society set before intellectual property law many challenges. Both law practitioners and academics ask whether the law follows the media and their spectacular development, and whether the law meets expectations of media society. The answers to these questions are negative, but fortunately law tries not to be further than a step behind the progress, not only by creating new legal frameworks that meet the needs, but also, and perhaps above all, thanks to the progressive interpretation of traditional legal rules..
The process of strategy formation in software business : three cases from Kainuu region, Finland
Working effectively with legacy code
When to utilize Software as a service
Beautiful architecture : leading thinkers reveal the hidden beauty in software design
Screen Capture Application : extension  framework in Symbian OS
Agile processes, in software engineering, and Extreme Programming : 16th International Conference, XP 2015, Helsinki, Finland, May 25-29, 2015 : proceedings
Party recorder Android application
The integration of JasperReports to MHG ERP System
Flash Lite : Multiplayer Game Example
iPhone application development for dummies
Agile processes in software engineering and extreme programming : 9th international conference, XP 2008, Limerick, Ireland, June 10-14, 2008 : proceedings
Experiences of a value assessment for products
Supporting collaborative development : cognitive challenges and solutions of developing embedded systems
Software testing : an ISTQB-BCS certified tester foundation guide
A framework for requirements specification in software development outsourcing
Discourses on 'culture' and 'usability work' in software product development
New industries from new places : the emergence of the software and hardware industries in China and India
Mastering concurrency programming with Java 8 : master the principles and techniques of multithreaded programming with the Java 8 concurrency API
Techniques and practices for software architecture work in agile software development
In 1996, Pablo Ventura turned his attention to the choreography software Life Forms to find out whether the then-revolutionary new tool could lead to new possibilities of expression in contemporary dance. During the next 2 decades, he devised choreographic techniques and custom software to create dance works that highlight the operational logic of computers, accompanied by computer-generated dance and media elements. This article provides a firsthand account of how Ventura's engagement with algorithmic concepts guided and transformed his choreographic practice. The text describes the methods that were developed to create computer-aided dance choreographies. Furthermore, the text illustrates how choreography techniques can be applied to correlate formal and aesthetic aspects of movement, music, and video. Finally, the text emphasizes how Ventura's interest in the wider conceptual context has led him to explore with choreographic means fundamental issues concerning the characteristics of humans and machines and their increasingly profound interdependencies..
Development of module test automation
Managing offshore outsourcing of software r&d projects : case experience from Indian software companies
Software testing foundations : a study guide for the certified tester exam : foundation level, ISTQB compliant
Continuous Software Engineering
Multiplatform software solution : porting software from the S60 platform to the maemo platform
Human aspects of software engineering
Agile processes in software engineering and extreme programming : 10th international conference, XP 2009, Pula, Sardinia, Italy, May 25-29, 2009 : proceedings
Platform ecosystems : aligning architecture, governance, and strategy
Enhancing software process improvement using value engineering
Joel on software : and on diverse and occasionally related matters that will prove of interest to software developers, designers, and managers, and to those who, whether by good fortune or ill luck, work with them in some capacity
Introduction to programming with Java : a problem solving approach
Agile excellence for product managers : a guide to creating winning products with agile development teams
An active attitude and the spirit of doing : hands-on work and results at the Information Technology department of Oulu UAS
Abstract: Party recorder application for Android.
Improving software organizations : from principles to practice
Abstract: Cross-evaluation Reports of the Degree Programmes in Automation  Technology, Software Engineering, and Information Technology.
Social software engineering : development and collaboratorion with social networking
Mono-perspective views of multi-perspectivity : information systems modeling and 'The blind men and the elephant'
Tools and techniques for specification-driven software development
Correlation between software metrics and defect density
A practical guide to SysML : the systems modeling language
Creating a web based application : case theater seat reservation system
Abstract: Implementation and evaluation of service-oriented architecture in Labranet.
Screen Capture Application : designing architecture in Symbian OS
SOFTWARE IN TOURISM INDUSTRY : A Study On Emerging New Niches Of Software In Hotel Industry
Abstract: Screen Capture Application : extension  framework in Symbian OS.
Implementing Open Services for Lifecycle Collaboration API for the FreeNest platform
Systems, software and services process improvement : 19th European Conference, EuroSPI 2012, Vienna, Austria, June 25-27, 2012. Proceedings
An intention-driven approach for usability-related requirements engineering : interaction design of innovative software products for consumer market.
The advent of open source democracy and wikipolitics : challenges, threats and opportunities for democratic discourse
Semantic visualization for smart spaces : merging the material and digital worlds
Implementation and evaluation of service-oriented architecture in Labranet
PSP : a self-improvement process for software engineers
Improving the effort management of the non-construction activities in custom software development projects
Proceedings of VikingPLoP 2012 Conference
Professional cross-platform mobile development in C#
Examining business models of Software-as-a-Service companies
This Bachelor’s thesis was commissioned by OY LM Ericsson AB. The work was done at Ericsson’s premises in Oulu. Oulu premises concentrate on re-search and development of base station solutions for WCDMA and LTE-networks. The purpose of this thesis was to automate base station test cases in a real RNC-environment in a WCDMA-network, mainly traffic cases that measure average throughput in different conditions and settings. The main aim of this automation was to automate some of the testing so that human resources that were consumed by this basic testing could be assigned to something more useful. And of course automation could bring much needed stability and better regression to testing. Other aims were to document the used equipment and choose test cases to automate. The aims were achieved so that the chosen transfer multi-RAB and soft hando-ver test cases were automated. All of the test cases are not possible to auto-mate but few more should be possible. Unfortunately that was not possible in time reserved for this thesis. The used equipment was also documented. Auto-mation is in use for daily software release testing now. This automation could be taken further for example by attaching a signal ana-lyzer with an Ethernet connection. This would enable antenna power measurements. Robustness testing cases are possible to add to this system. Adding a third base station to the attenuator would add many different variations for handovers.
Guide to software development : designing and managing the life cycle
NHiberate : ORM solution for .NET platform
Object-oriented approaches applied to GIS development
The art of designing embedded systems
Multimedia works and the issue of categorisation
iPhone open application development
Evaluating software architectures : case IT Mill toolkit
Handbook of the secure agile software development life cycle
GPS Tracker Data Analysis Platform
Software product lines : research issues in engineering and management
It is fair to say that Agile development is today's major trend. It is used more or less in every company if the company is involved in mobile software industry. Agile development is also widely used in other embedded software development. It is recognized to be a very effective and efficient way of development. However, there are many issues which are needed to be considered and taken into account when transferring to this process model. Especially the transferring period can be very difficult and have a long lasting effect to a company. The aim of this Master's thesis was to study more deeply this subject and find a different way to conquer the challenges what comes to this subject. There are so many positive experiences from this, but normally some of the negative sides have been left out. I have experienced a transfer in my own career and I saw really close what kind of things are usually left out and not told. The second aim of this thesis was to investigate how well Agile methods suit in embedded software development. Agile works well what comes just to software projects, but when talking about embedded development, the process is not always so easy. Embedded devices vary for example from small music players to big and complex medical devices. This thesis will concentrate only on small portable devices, since my experience comes from that field. I used mainly my own experiences and situations I have met to find a suitable process. In theory parts I used different publications from the Internet and books to back up my knowledge. I managed to present basic practices and processes from different methodologies that I discovered as good in embedded development. Next steps would be to test these different processes in practice. Since there are many different kinds of embedded systems out there, every modified process has to be first tested in a real life before it can be decided whether can it be taken in to use or not.
Model-driven software development with UML and Java
Self-management in distributed systems : smart adaptive framework for pervasive computing environments
What is done cannot be undone: the changing face of intellectual property law in the media society
Text type distinctions and variation in English of software engineering
Test-driven development in Microsoft(R) .NET
Security engineering for service-oriented architectures
Software design for a Smart Lock System for Home Automation
architecture levels at which empirical analysis typically operates. Taken together, the two parts answer to the concerns over the lack of longitudinal research in the field of software metrics. The thesis contributes to the ongoing discussion with few methodological insights.
The software product line strategy has enabled many organizations to improve productivity, reduce time-to-market, and address both mass- and niche markets. A successful product line organization achieves strategic levels of architectural reuse. The topics in this book cover research related to the most important practices in a product line organization. The contributions provide experience-based knowledge about the domain and application engineering, the modeling and management of variability, and the design and use of tools to support the management of product line related knowledge. Käkölä and Dueñas have grouped them into five parts corresponding to the main areas of software product line engineering: product line management, product line requirements engineering, product line architecture, product line testing, and specific product line engineering issues. They ensured maximum coherence and cross-referencing throughout the book, imposing a common terminology and carefully integrating all chapters. The result is a valuable and enduring resource for researchers in both industry and academia who will also find many pointers for future research and implementation strategies. In addition, systems and software professionals, and technology managers aspiring to fully leverage the product line strategy will also benefit from many pertinent development details.
Knowledge engineering for software development life cycles : support technologies and applications
Perspectives on the future of software engineering : essays in honor of Dieter Rombach
"Professional testing of software is an essential task that requires a profound knowledge of testing techniques. The International Software Testing Qualifications Board (ISTQB) has developed a universally accepted, international qualification scheme aimed at software and system testing professionals, and has created the Syllabi and Tests for the "Certified Tester." Today about 300,000 people have taken the ISTQB certification exams. The authors of Software Testing Foundations, 4th Edition, are among the creators of the Certified Tester Syllabus and are currently active in the ISTQB. This thoroughly revised and updated fourth edition covers the "Foundations Level" (entry level) and teaches the most important methods of software testing. It is designed for self-study and provides the information necessary to pass the Certified Tester-Foundations Level exam, version 2011, as defined by the ISTQB. Also in this new edition, technical terms have been precisely stated according to the recently revised and updated ISTQB glossary. Topics covered: Fundamentals of Testing Testing and the Software Lifecycle Static and Dynamic Testing Techniques Test Management Test Tools Also mentioned are some updates to the syllabus that are due in 2015"--
Software evolution in space and time
Software engineering
Drive for future software leverage : the role, importance, and future challenges of software competences in Finland
Combining capability assessment and value engineering : a new  two-dimensional method for Software Process Improvement
Advanced software testing. Volume 2, guide to the ISTQB advanced certification as an advanced tes manager
Distributed systems in industrial process monitoring and control
Software factory magazine
Model-based development : applications
uClinux development for FPGA platform
Software creativity 2.0
Enterprise application software
Context modeling and utilization in heterogeneous networks
Abstract: uClinux development for FPGA platform.
Portability of Qt applications in the mobile environment
Introduction to software engineering design : processes, principles, and patterns with UML2
Market analysis on Swedish software markets for infoBoard Europe GmBH
Oulu UAS educates professionals for the needs of Northern Finland, whose competence corresponds to the needs and development of working life in the region. We react quickly to the changes occurring in working life and the requirements of new competence.    At the degree programme of Information Technology we aim to develop our teaching to include more real-life project work: our curricula include increasingly more company-related projects. This way we are able to provide our students with a more realistic view of the everyday work at companies, and also improve their employment opportunities.    The purpose of this publication is to spread the word about the projects and results achieved by the students and staff of the Information Technology department. In addition to student projects, our department is also involved in many domestic and international projects well worth mentioning. Yearly, our students complete hundreds of thesis and project work. This publication also presents good examples of our successful projects.
Application architecture for WebSphere : a practical approach to building WebSphere applications
Tiivistelmä: Implementing Open Services for Lifecycle Collaboration API for the FreeNest platform.
Software & systems requirements engineering : in practice
Connecting the usability and software engineering life cycles : using a communication-fostering software development framework and cross-pollinated computer science courses
Introduction to software process improvement
Engineering and managing software requirements
Introduction to multimedia systems
Software testing : an ISEB foundation
The CERT C coding standard : 98 rules for developing safe, reliable, and secure systems
Modernizing legacy systems : software technologies, engineering processes, and business practices
Proceedings of SoSE 2011 paper project workshop on software engineering
Flash Lite : Live XML data integration example
Automated software testing system for Palladium emulator
How to build an experience differentiation strategy for software business : customer values perspective
Software testing and measurement of not found faults : a case study in telecommunications
A beginner's guide to programming logic and design : comprehensive
Using genetic algorithms in testing a distribution protection relay software : a statistical analysis
Abstract.
Code craft : the practice of writing excellent code
Web engineering : principles and techniques
Agile software development : best practices for large software development projects
Productization of a Web Service : PREPD Presentation Tool
Professional iPhone and iPod touch programming : building applications for Mobile Safari
Enterprise Application Software
Antecendents to and performance effects of software firms' business models
Patterns for distributed embedded control system software architecture
Integration-ready architecture and design : software engineering with XML, Java, .NET, wireless, speech, and knowledge technologies
Resource monitoring and visualization of OSGi-based software components
Development and evaluation of the location-aware platform:main characteristics in adaptable location-aware systems
Evidence-based software engineering and systematic reviews
Automating variant verification in S60 environment
Abstract: Online print.
Successful evolution of software systems
Abstract: NHiberate : ORM solution for .NET platform.
Basis for tool support for product-line processes
Software productivity
Practical development of software configuration management for embedded system
Algorithmic reflections on choreography
The definitive guide to Terracotta : cluster the JVM for Spring, Hibernate, and POJO scalability
Software process improvement and capability determination : 13th International Conference, SPICE 2013, Bremen, Germany, June 4-6, 2013 : proceedings
The role of network governance in business model performance
Agile development and testing in embedded systems
Developing value assessment for SW architecture
Localising and testing Nokia Data Suite 3.0
Evaluation and measurement in enterprise and software architecture management
Proceedings of the 9th OOPSLA Workshop on Domain-Specific Modeling (DSM'09)
Adapting model-based testing to agile context
Adoption of agile software development in Vietnam
Technical Java : developing scientific and engineering applications
Open systems and standards for software product development
Implementing a value assessment for products : an industrial case study
A Multi-tier application development using Java EE
Abstract: Development of module test automation.
An active attitude and the spirit of doing. Hands-on work and results at the Information Technology department of Oulu UAS
"This book bridges the best practices and design principles successfully employed over last two decades with modern Knowledge Engineering (KE), which has provided some of the most valuable techniques and tools to support encoding knowledge and experiences"--Provided by publisher.
Why does software cost so much? : and other puzzles of the information age
Requirements modelling and specification for service oriented architecture
Value-creating networks : an analysis of the software component business
Software engineering : theory and practice
Product-Focused Software Process Improvement : 15th International Conference, PROFES 2014 : Helsinki, Finland, December 10-12, 2014 : Proceedings Volume 2
Coverage includes: Navigation, Alerts & Action Sheets & Modal Views, Custom Table Views, The Split View, Touch Events, Notification Processing, Networking Concepts, Multimedia, Application Preferences, Data Storage, The Pasteboard, Unit Testing, Performance Tuning and Optimization, 	Integrating iAds, Multitasking.
The Lyra design method
Assessing value of SW requirements
Common system and software testing pitfalls : how to prevent and mitigate them : descriptions, symptoms, consequences, causes, and recommendations
Aligning business processes and information systems : new approaches to continuous quality engineering
Preparing for deployment
Abstract: This thesis was motivated by my professional interest in Enterprise Application Software (EAS). Before I would be able to address the subject of my interest I needed to build a framework that could be used for the thesis.  The goal of this thesis was to create a framework which can be used to analyze the applicability of EAS for different industries by certain applicability criteria. There are so many different EAS today for each software category that companies and organizations struggle during software acquisition processes with the challenge to determine the best candidate to their particular business. This thesis aimed to analyze the factors to be considered be-fore and during the evaluation of the acquisition options.  The theoretical part of this thesis was built to separately determine the software and in-dustry categories and applicability criteria. The theory on software consists of Business Intelligence (BI), Customer Relationship Management (CRM) and Database and Enterprise Resource Planning (ERP). The theory on industries covers the banking, manufacturing and telecommunications industries where telecommunications is considered as a service pro-vider.  When the framework was finished it was utilized to perform an applicability analysis with it. The analysis was focused on every software category at a time. Every software catego-ry was analyzed for every industry by the chosen applicability criteria. The analysis led to conclusions on how to weigh different evaluation factors during the acquisition process.
More Joel on Software : Further Thoughts on Diverse and Occasionally Related Matters That Will Prove of Interest to Software Developers, Designers, and Managers, and to Those Who, Whether by Good Fortune or Ill Luck, Work with Them in Some Capacity
This volume constitutes the refereed proceedings of the 19th EuroSPI conference, held in Vienna, Austria, in June 2012. The 29 revised papers presented in this volume are organized in topical sections on SPI and business factors; SPI lifecycle and models; SPI assessment and quality; SPI processes and standards; SPI in SMEs; SPI and implementation; creating environments supporting innovation and improvement; standards and experiences with the implementation of functional safety; business process management; and, SPI in SMEs - a project management perspective.
This book contains the refereed proceedings of the 15th International Conference on Agile Software Development, XP 2014, held in Rome, Italy, in May 2014. Because of the wide application of agile approaches in industry, the need for collaboration between academics and practitioners has increased in order to develop the body of knowledge available to support managers, system engineers, and software engineers in their managerial/economic and architectural/project/technical decisions. Year after year, the XP conference has facilitated such improvements and provided evidence on the advantages of agile methodologies by examining the latest theories, practical applications, and implications of agile and lean methods. The 15 full papers, seven short papers, and four experience reports accepted for XP 2014 were selected from 59 submissions and are organized in sections on: agile development, agile challenges and contracting, lessons learned and agile maturity, how to evolve software engineering teaching, methods and metrics, and lean development.
This book constitutes the refereed proceedings of the 19th International Working Conference on Requirements Engineering: Foundation for Software Quality, REFSQ 2013, held in Essen, Germany, in April 2013. The papers are organized in 8 topical sections on requirements engineering and architecture; natural language requirements; requirements engineering and quality; traceability; requirements engineering and business/goals; requirements engineering and software development; requirements engineering in practice; product lines and product management.
Supporting nomadic agent-based applications in the FIPA agent architecture
Competence change in contract R&D : analysis of project nets
Yhteenveto (Finnish summary)
Implementing a value assessment for products : a case study
Motifs and folktales : a new statistical approach
Java software solutions : foundations of program design
In the decade since the idea of adapting the evidence-based paradigm for software engineering was first proposed, it has become a major tool of empirical software engineering. Evidence-Based Software Engineering and Systematic Reviews provides an introduction to the use of an evidence-based model for software engineering research and practice. The book explains the roles of primary studies (experiments, surveys, case studies) as elements of an over-arching evidence model, rather than as disjointed elements in the empirical spectrum. It provides up-to-date guidance on how to conduct secondary studies in software engineering―replacing the existing 2004 and 2007 technical reports. The book is divided into three parts. The first part discusses the nature of evidence and the evidence-based practices centered on a systematic review, both in general and as applying to software engineering. The second part examines the different elements that provide inputs to a systematic review (usually considered as forming a secondary study), especially the main forms of primary empirical study currently used in software engineering. The final part provides practical guidance on how to conduct systematic reviews (the guidelines), drawing together accumulated experiences to guide researchers and students in planning and conducting their own studies. The book includes an extensive glossary and an appendix that provides a catalogue of reviews that may be useful for practice and teaching.
Wicked problems, righteous solutions : a catalogue of modern software engineering paradigms
Practical adaptation of configuration management : three case studies
Co-verification of hardware and software for ARM SoC design
Requirements engineering : foundation for software quality : 19th International Working Conference, REFSQ 2013, Essen, Germany, April 8-11, 2013. Proceedings
Application of MIS in school : student management system design
Increasing beneficial interactions in a computer-supported collaborative environment
A beginner's guide to programming logic and design : introductory
The 7th International Conference on eXtreme Programming and Agile Processes in Software Engineering : tutorials, workshops, activities, and keynote speeches : Oulu, Finland, June 17-22, 2006
This book constitutes the refereed proceedings of the 13th International Conference on Software Process Improvement and Capability Determination, SPICE 2013, held in Bremen, Germany, in June 2013. The 21 revised full papers presented and 7 short papers were reviewed and selected from numerous submissions. The papers are organized in topical sections on process quality; medical device software processes; design and use of process models; studies of software development; agile development; IT service management; assessment for diagnosis.
Sulava Scrum survey report
Constitutes the refereed proceedings of the 8th International Conference on Agile Processes in Software Engineering and eXtreme Programming, XP 2008, held in Limerick, Ireland, in June 2008.
Efficient symbolic model checking of concurrent systems
Software process asset management and deployment in a multi-site organization
Experience and knowledge management in software engineering
Customized agile development process for embedded software development
Information systems transformation : architecture-driven modernization case studies
The road map to software engineering : a standards-based guide
Implementing a value-based approach to software process and product assessment
Agile processes in software engineering and extreme programming : 15th International Conference, XP 2014, Rome, Italy, May 26-30, 2014 : proceedings
Software engineering : the current practice
Wireless impact force measuring system based on acceleration
Measurement-based value alignment and reasoning about organizational goals and strategies : studies with the ICT industry
Executive's guide to cloud computing
