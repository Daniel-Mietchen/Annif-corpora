http://www.yso.fi/onto/yso/p16029 J2EE
J2EE J2EE Java 2 Enterprise Edition
Järjestelmäintegraatio : case Kauppalehti SIX Telekurs
Java Enterprise selainpohjaisissa sovelluksissa
Sonet eCommerce -hankintajärjestelmä
J2EE-pohjainen rekrytointisovellus
Jakarta Struts -sovelluskehys J2EE-sovelluskehityksessä
Tiivistelmä.
Java pohjaisen Business Web-sovelluksen Front End
Sanomapohjainen integrointi : esimerkkeinä terveydenhuollon HL7- ja IHE-integrointipalvelut
Palvelualusta Java-websovelluksille
Sisällön- ja konfiguraationhallinta J2EE ympäristössä
WWW-sovelluksen toteuttaminen Google App Enginelle
Yrityssovellusten suunnittelu mobiileille päätelaitteille käyttäen J2ME- ja J2EE-alustoja
Toimintakäsikirja-alusta IMS-Järjestelmässä
Paikkatietopalvelut MHG Oy:n asiakashallintajärjestelmän kehittäminen
Opinnäytetyöaiheiden tarjoaminen Savonia-ammattikorkeakoulun intranetissä
Opinnäytetyössä kerrotaan jatkuvan integraation käyttöönotosta toimeksiantajan Java EE -järjestelmien kehitystyössä. Jatkuvan integraation käytäntöihin siirryttiin, koska järjestelmien koko ja lukumäärä kasvoivat viime vuosina voimakkaasti. Versiointi- ja kehitystyö osoittautui liian hitaaksi ja virhealttiiksi, sillä järjestelmäkehityksen ja –testauksen ympäristöjä oli useita, ja järjestelmissä oli paljon sisäisiä ja ulkoisia integraatioita. Järjestelmien konfigurointi ja integrointi eri ympäristöihin oli työlästä ja testaus haasteellista. Järjestelmäkehitykseltä alettiin vaatia lisäksi entistä parempaa tehokkuutta. Opinnäytetyön tavoitteena oli järjestelmäkehityksen työmenetelmien kehittäminen kohti jatkuvan integraation käytäntöjä. Tarkoituksena oli esitellä jatkuvan integraation teoriaa, käyttöönotettuja työvälineitä ja muodostuneita käytäntöjä. Opinnäytetyössä kuvasin siirtymisprosessia perinteisestä V-mallista kohti jatkuvaa integraatiota esittelemällä eri korvausjärjestelmien uusia kehitysrutiineja jatkuvan integraation ympäristössä. Tein tutkimusta oman kokemuksen, tekstianalyysin ja asiantuntijahaastattelujen keinoin. Jatkuvan integroinnin hyödyt tulivat opinnäytetyöprosessissa selkeästi esiin: versiointi- ja kehitystyö nopeutui, koska pakettien tekoon, asennukseen ja testaukseen käytetty aika lyheni jopa useista päivistä minuutteihin. Versiointityöstä tuli mielekkäämpää, ja automatisointien ansiosta versioinnin perustyöt ovat nyt kaikkien kehittäjien tehtävissä. Jatkossa myös koodin laatua on mahdollista parantaa ja virheet löydetään nopeammin, koska käyttöön otettiin automaattisia toiminnallisia testejä ja koodin analysointiohjelmia. Esiin tulleet käyttöönoton rajoitteet liittyivät järjestelmän ikään ja rakenteeseen sekä muihin edelleen käytössä oleviin vanhoihin versiointikäytäntöihin. Opinnäytetyössä on luottamuksellista aineistoa, joten sitä ei saa julkaista verkkojulkaisuna.
Riichi-pelipalvelin japanilaisilla riichi-mahjong säännöillä
Toimintakäsikirja-alusta IMS-järjestelmässä
PIHA -sovelluksen siirtäminen NonStop-palvelimelle : Outokumpu Stainless Oy
Asetietokanta
JSP-ohjelmointi
Monikanavaportaalien käyttö yritysjärjestelmien integroinnissa
Tiivistelmä: Monikanavaisten sovellusten kehittäminen.
Transaktion käsite ja transaktioiden hallinta palvelupohjaisissa arkkitehtuureissa
Verkkokauppa J2EE6-teknologialla toteutettuna
J2EE-kuljetustenhallintajärjestelmä
Julkaisujärjestelmän taustakerroksen uudelleensuunnittelu
Konfiguraatiopalvelimen toteutus WISE-projektille
Hakustatistiikkajärjestelmä : hakujen tilastointi Keltainen Pörssi -verkkopalvelussa
Energiamittareiden etälukuohjelma
Asiakkuudenhallintasovellus ja sen arkkitehtuuri
Arkkitehtuurien hyödyntäminen
Web-teknologia ja työkuvausten dokumentoiminen PHP-sovelluksella
Opinnäytetyön tavoitteena oli luoda dynaaminen intranetsivusto Porvoon K-raudan henkilöstön käyttöön, sekä toteuttaa tarvittava dokumentaatio ja testaus. Tavoitteena oli myös saada kokemusta systeemityöprojektin läpiviemisestä sekä kokonaisen järjestelmän rakentamisesta. Projekti toteutettiin yksilötyönä päivätyön ohessa. K-raudan intranet nimettiin K-intraksi. K-intra toteutettiin Java 5.0 EE – ohjelmointialustan avulla, hyväksi käyttäen kahta Core J2EE Patternsia, Session Facade ja Front Controller. Järjestelmä rakennettiin täten MVC-mallin mukaisesti. MVC-malli koostuu K-intrassa kolmesta tasosta, Model (Entity Beans – EJB 3.0, POJO), View (JavaServer Pages JSP) ja Controller (Session Facade – Session Bean, Front Controller  - Servlet). K-intraan voidaan tallentaa tiedotteita. Tiedotteeseen voidaan tallentaa otsikko, sisältöteksti, asiasanoja, tallennuspäivämäärä, rajata näkyvyyttä käyttäjän mukaan sekä liittää liitetiedoston. Tiedotteeseen tallennetaan aina tieto, missä kansiossa se sijaitsee. Peruskäyttäjä voi lukea ja hakea tiedotteita sekä lisätä kommentteja. Johtoryhmään kuuluva käyttäjä voi lukea, hakea, lisätä ja poistaa tiedotteita sekä lisätä kommentteja. Järjestelmänvalvoja voi lukea, hakea, lisätä ja poistaa tiedotteita ja kommentteja sekä lisätä ja poistaa käyttäjiä ja kansioita. Projektin tuloksia ovat toimeksiannon mukainen intranetsivusto sekä kehitystyön dokumentit; määrityskuvasto, suunnittelukuvasto, testaussuunnitelma, testauspöytäkirjat sekä asennusohje. Erillistä käyttöohjetta K-intra ei tarvitse helppokäyttöisyytensä vuoksi. Projekti antoi uuden näkökulman Javan sovellusmahdollisuuksiin. Javalla on laaja kokoelma valmiita ominaisuuksia, loistavat tukipalvelut ja ohjeistukset.
Tilapäistunnusten hallintasovellus
Tiivistelmä: Osaamisrekisteri Skillster.
Mule-sovelluskehys sanomanvälityksessä
Hibernate ja ICEFaces sovelluskehyksien käyttö MVC-mallin mukaisessa J2EE sovellustuotannossa
J2EE-sovelluksen toteuttaminen POJO:illa
Java-sovelluskehykset ja JBoss Seam
Web-käyttöliittymän toteuttaminen Struts-ohjelmistolla J2EE-sovellukselle
Site Selector -verkkosovelluksen suunnittelu ja toteutus
JavaServer Pages-ohjelmointi BroadVision-järjestelmässä
Linux- ja Windows-palvelimen asennus koulutustehtäviin
Internet-käyttöisten ohjelmien suunnittelu ja toteutus
Monikanavaisten sovellusten kehittäminen
J2EE web-sovelluskehykset
Mittaustiedon julkaisujärjestelmä
J2EE Connector Architecture yrityksen sovellusten integroinnissa
Liiketoimintaprosessilähtöinen palvelukeskeinen sovelluskehitys
Julkaisujärjestelmän määritteleminen osaksi J2EE-alustaa
J2EE -arkkitehtuuri intranetin runkona : case: Porvoon K-raudan intranet-sivusto
Java-ohjelmointi
Tiivistelmä: Web-sovelluskehys.
Java-liiketoimintasääntöjen ulkoistaminen
Vika- ja virhetilanneilmoitusjärjestelmän suunnittelu ja toteutus J2EE-tekniikalla
Kerrosarkkitehtuurisuunnittelu
Dynaamisten selainsovellusten kehitys- ja ajoympäristö iPage
Hajautetut verkkopalvelut
IMS-toimintajärjestelmäalusta (IMS-järjestelmä) on työkalu, jonka avulla asiakasyritys voi toteuttaa oman laatujärjestelmänsä. Tämän opinnäytetyön tarkoituksena oli suunnitella uudelleen IMS-järjestelmän toimintakäsikirja-alusta. Aiempi toteutus on vanhentunut, eikä sen ylläpitäminen ole enää kustannustehokasta.     Projektin tärkeimpänä painopisteenä oli saada aikaan mahdollisimman paljon hyödyllistä materiaalia jatkokehitystä varten. Projektin ohjelmointiympäristöksi valittiin Java EE ja tietokantaa käsiteltiin Hibernaten avulla. Valinta perustui IMS-järjestelmän ohjelmointikieleen ja arkkitehtuuriratkaisuihin.     Opinnäytetyöprojektin aikana tehtiin toimintakäsikirja-alustasta suppea vaatimusmääritysdokumentti, määritys- ja suunnittelukuvastot sekä demo. IMS Business Solutions Oy pystyy käyttämään demoa sellaisenaan toimintakäsikirja-alustan jatkokehityksen pohjana.     Projektin tulokset ovat IMS Business Solutions Oy:n liikesalaisuuksia.
Google Web Toolkit Java-kehittäjän työkaluna
Hajautettujen arkkitehtuurien toteutusalustat
LDAP-pohjaisten hakemistojen hallinta EJB-komponenttimallin avulla
Sovellusten kehittäminen J2EE-arkkitehtuurin mukaisesti
Kohti jatkuvaa integraatiota vakuutusten korvausjärjestelmien kehittämistyössä
Esimerkkisovelluksen kehittäminen J2EE-teknologioiden avulla
Web-sovelluskehys
Elisa Navitas : alueellisen potilastietohakemiston jatkokehitys
Microsoftin .NET-monitasoarkkitehtuuri
Palvelinohjelmiston Java-pohjainen valvontasovellus
J2EE-suunnittelumallien soveltaminen ohjausjärjestelmän toteutuksessa
Opinnäytetyön aihe liittyy toimeksiantoon Varaani Works Oy:ssä, missä tarkoitus oli suunnitella ja toteuttaa käyttöliittymä J2EE-pohjaiselle sovelluskokonaisuudelle. Työn näkökulma on vertailla kehitystapoja ja sovelluskehitys on vain runkona tutkimukselle. Työ pitää sisällään pääasiassa lyhyitä kuvauksia GWT:n käyttötavoista ja niiden vastineita yleisestä verkkosovelluskehityksestä. Opinnäytetyön tavoitteena oli selvittää Google Web Toolkit -verkkosovelluskehyksen soveltuvuus Java-taustaisen, aloittelevan webkehittäjän työkaluksi. Raportin lukemalla Java-kehittäjä ymmärtää perusteet GWT-sovelluskehyksen käytöstä verkkosovelluskehityksessä. Raportissa käsitellään GWT-sovellusprojektin kehitysympäristön rakentaminen ja sovelluskehyksen erikoisuudet. Kehitysprosessin keskeisiä vaiheita verrataan yleisesti verkkosovellusten tekemisessä käytettyyn JavaScript- ja PHP-pohjaiseen lähestymistapaan. GWT todettiin lopulta hyväksi työkaluksi Java-kehittäjälle asynkronisen ajattelutavan ymmärtämiseen ja yksinkertaisen perustason verkkosovelluksen rakentamiseen. Ensimmäiseksi työkaluksi verkkosovelluskehitystä aloittelevalle se ei kuitenkaan ollut tehokas vaihtoehto, sillä sovelluksen kehitysympäristön rakentamista pidettiin melko työläänä yleiseen sovelluskehitysmalliin verrattuna.
Tehokas Java EE -sovellustuotanto
EJB 3.0: käyttöönotto
Viestipohjaisten EJB-komponenttien käyttö liiketoimintaprosessien toteutuksessa
