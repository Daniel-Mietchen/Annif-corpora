http://www.yso.fi/onto/yso/p25355 peliohjelmointi
peliohjelmointi peliohjelmointi
Pythonin käyttö peliohjelmoinnissa
Peliohjelmointi JavaScript-kirjastolla
Digitaalinen lautapeli oppimisen tukena : peliohjelmointia lasten ehdoilla
Unity-pelinkehitysprosessin tehostaminen
Alustariippumattoman 2D-mobiilipelin prototyypin kehitys Cocos2d-x-pelimoottorilla
Rahapelien grafiikan suunnittelu ja toteutus : Case Kulta-Jaska ja Unelmaloma
Suunnittelumallit ohjelmoinnissa
Plan B from Outer Space : InsomniaGame-pelin suunnittelu ja toteutus 2010-2011
Peliäänien suunnittelu ja toteuttaminen mobiilipeleissä
Mobiilipelinkehitys aloittavalle peliyritykselle Unity3D-ympäristössä
Unity-pelimoottori
Peliohjelmointi C#:lla ja XNA:lla
Pc-pelin kehitys ja julkaisu
Mobiilipelin toteuttaminen Unity-kehitysympäristössä : Android-käyttöjärjestelmälle
Sovelluksen sisäiset ostokset : päivitys iOS-peliin Megamassive
Lapsille suunnattujen oppimispelien kehittäminen Putte Oy:n verkkosivuille
Työn aiheena oli kehittää ja julkaista älypuhelinsovellus Windows Phone -alustalle sekä tarkastella kehitystyön aikaisia haasteita. Esimerkkisovelluksena kehitettiin strategiapeli, Mylly. Työn suorittaminen jakaantui pääosin kolmeen vaiheeseen. Ensimmäisessä vaiheessa hahmoteltiin sovelluksen käyttöliittymä ja sen oleelliset perusominaisuudet siten, että pelilaudalle voitiin asettaa pelinappuloita sattumanvaraisesti. Toinen vaihe keskittyi mietintään, jossa pelinappuloiden siirtelyn kannalta huomioitiin muun muassa sääntöjen vaikutus. Lisäksi kehitettiin tärkeä elementti, puhelimen siirrot päättelevä peliäly. Lopuksi keskityttiin sovelluksen julkaisuun sekä sovellus lokalisoitiin kolmelle kielelle. Työn tuloksena syntyi julkaisukelpoinen peli, jolla peruspelaaminen luonnistuu. Jatkokehitettäväksi vielä jää peliälyn kehittäminen seuraavalle vaativammalle tasolle, jonka voittaminen olisi jo vaikeaa.
Peliohjelmointi rikkaassa internet-ympäristössä
Peliohjelmoinnin koulutusmateriaali
UGC-pelin toteutus HTML5-tekniikalla
Opinnäytetyön aiheena on kehysalustariippumattoman pelin tekeminen ja tekemisen analysointi. Kyseinen pelisovellus on Atarin julkaiseman Breakout-pelin pohjalta rakennettu peli. Peli tehtiin ilman kolmannen osapuolen pelintekokehystä eli muunmuassa pelin fysiikat, grafiikat ja pääsilmukka toteutettiin itse. Pelin muutaman komponentin toteuttamisessa käytettiin kolmannen osapuolen kirjastoja käyttöjärjestelmäriippumattomuuden mahdollistamisessa sekä fonttien renderöimisessä. Lopputuloksena saatiin tehtyä Breakout-klooni käyttämättä pelinkehitysalustaa. Pelimoottori tehtiin pääasiassa oppimistarkoituksen, sekä mielenkiinnon takia. Pelimoottoriin kuuluu yksinkertainen fysiikan mallinnus, bittikarttojen renderöinti, pääsilmukan luonti, käyttöjärjestelmästä riippumaton ikkunakonteksti sekä käyttäjän näppäimistösyötteen vastaanottaminen. Pohdinnan tuloksena on, että pelinkehitysalustaa kannattaa käyttää mikäli tavoitteena on tehdä nopeasti peli markkinoille ja kiinnostuksen kohteena on enemmän pelin toiminta ja vähemmän itse pelimoottorin implementaatio. Pelimoottorin toiminnasta kannattaa kuitenkin tietää edes jonkin verran, jotta ohjelmoija pystyy paikantamaan mahdollisten virheiden kontekstin.
Kilpailujärjestelmän kehitys ja ohjelmointi : Case Virtuaalinen Ratsastajainliitto
Visuaalinen suunnittelu infinite runner -peliringissä
Web-portaali pelaajayhteisölle
Selainpelin kehitys PHP/MySQL-tekniikalla
Pelisuunnittelu Indie -kehittäjien näkökulmasta
Ideasta prototyypiksi : peli-idean toteuttaminen prototyypiksi
Mobiilipelin toteutus Unity-pelimoottorilla: Cast into Hell
2D-Pelikehitys Unity3D-työkalulla
Pelikehitys Unity3D-ympäristössä
Katz - Android sovelluksen toteutus ja julkaisu
Yksinkertaisen fysiikkamoottorin toteuttaminen
Flash-ohjelmistokehitys : Perustietopaketti peliohjelmoijille
Koululaisen pieni peliohjelmointiopas
Mikromanageroinnin toteuttaminen StarCraft-reaaliaikastrategiapeliin geneettisellä ohjelmoinnilla muodostettujen potentiaalikenttien avulla
Opinnäytetyössä oli tarkoituksena käydä läpi koodauksen perusteita ja sen jälkeen siirtyä Unity3D-peliohjelmointiin tekemään autopeli mobiililaitteille C#- ja Java-kielellä. Aluksi käytiin läpi perusteita, jonka jälkeen aloitettiin pelin tekeminen Unity3D:llä. Tulokseksi saatiin toimiva ja yksinkertainen peli, jonka tekemisessä oppi perusteet pelinteosta mobiililaitteille.
Mobiilipeliohjelmointi : case CyberPong
Pelinkehitys : demosta julkaisuun
Tiivistelmä
Kehysalustariippumaton pelisovellus
Kolmiulotteinen pelisovellus taulutietokoneelle
Kansanperinnettä kännykkäpeliksi
Mobiilipelin ohjelmointi Corona SDK:lla
Tiivistelmä: Visuaalinen suunnittelu infinite runner -peligenressä. Opinnäytetyön tarkoituksena on tutkia infinite runner -peligenren visuaalista suunnittelua havainnoimalla erilaisia genreä edustavia pelejä. Havaintojen pohjalta syntyy toimiva infinite runner -peli. Työssä käsitellään pelin ulkoasun suunnittelun yleisiä asioita peligenren näkökulmasta. Kuinka genreä koskevien havaintojen pohjalta rakennetaan pelille ulkoasu? Miten nopeatempoiseen ja periaatteessa loputtomaan peliin luodaan illuusio todellista monipuolisemmista taustoista? Kuinka pelaajaa voidaan ohjata visuaalisilla keinoilla? Onko genren sääntöjä aina noudatettava?  Infinite runner -genre on melko tuore tasohyppelypelien laajaan skaalaan lukeutuva pelityyppi, josta ei löytynyt juuri lainkaan kirjoitettua vakiintunutta tietoa. Tutkimusvaiheessa käytiin läpi useita genren pelejä, joiden graafisia ratkaisuja havainnoitiin, vertailtiin ja analysoitiin.  Lopputuloksena syntyi valmis tietokonepeli, jossa on sovellettu tutkimusvaiheessa muodostettuja toimintamalleja ja ohjenuoria. Opinnäytetyön tutkimusosio tarjoaa näkökulman peligenren havainnointiin ja esimerkkitapauksen, jossa teoriaa on sovellettu käytännössä pelin suunnittelussa.
Proseduraalinen pelisisällön luominen
Kolmiulotteinen jätkänshakkipeli
Tekoälyn simulaation toteuttaminen Unity3D peliympäristössä
Pelaajatekoälyn suunnittelu ja toteutus Shoot 'em up -peliin
SQLite-tietokantaratkaisu C#-pohjaisessa pelissä
Unity 3D -pelinkehitystyökalu
XNA-ohjelmointi
Käytöspuut ja niiden käyttö taistelupelin tekoälyssä
Pelikehitys CodeIgniterilla
Tekoälyn luominen tietokonepeliin käyttäen Unity 3D -ohjelmistoa
Tekoälyn sovellutukset peleissä. Case Study: DroidWars
Romutettavaksi rakennettu : virtuaalisen auton toteutus pelimoottoriin
Tiivistelmä: Kolmiulotteinen pelisovellus taulutietokoneelle. Insinöörityön tavoitteena oli suunnitella ja toteuttaa kolmiulotteinen pelisovellus taulutietokoneelle. Suunnitteluvaiheeseen sisällytettiin taustatutkimusta mobiilipelisovellusten liiketoiminnasta ja ansaintamalleista. Mobiilipelien myynti eroaa konsolipelien myynnistä siinä, että se on keskittynyt digitaaliseen jakeluun. Nopeutuvien mobiililaajakaistayhteyksien ansiosta pelikauppa on aina kuluttajan mukana ja ostotapahtuman jälkeen peli on pelattavissa hetkessä. Pelisovellusten sisällä suoritettaviin mikromaksuihin perustuvan ansaintamallin liikevaihto on ohittanut vanhan kappalemääräiseen myyntiin perustuvan mallin. Taloudellisesti menestyneimpien mobiilipelien perusversiot jaetaan käyttäjille lähes poikkeuksetta ilmaiseksi. Liiketoimintamallien muuttuessa myös pelinkehittäjien toimintatavat ovat muuttumassa. Pelisovelluksen teknisen toteutuksen suunnittelussa tutkittiin kolmea eri pelinkehityksen teknologiaa, joista yksi valittiin sovelluskehityksen pääteknologiaksi. Päätökseen vaikuttavia asioita olivat teknologian hinta, ominaisuudet ja pelisovelluksen tekniset vaatimukset. Parhaaksi vaihtoehdoksi todettiin Objective C-ohjelmointikielellä kirjoitettu NinevehGL, joka on ilmainen kehitysvaiheessa oleva 3D-grafiikan piirtämiseen tarkoitettu kirjasto. Myös muita kehityksessä käytettäviä teknologioita ja työkaluja valittaessa pyrittiin suosimaan ilmaisia ja avoimen lähdekoodin vaihtoehtoja. Insinöörityön lopputuloksena saatiin aikaiseksi ulkoavaruuteen sijoittuva Bounceroids-pelisovellus. Sovelluksen kaikki sisältö luotiin yksin, mikä luonnollisesti rajoitti työn laajuutta ja teknisiä ratkaisuja. Toteutuksessa hyödynnettiin eri mediatekniikan osa-alueita sisällöntuotannosta, ohjelmistokehityksestä, graafisesta suunnittelusta, 3D-mallinnuksesta ja äänituotannosta. Peli julkaistaan sovelluskaupassa toukokuussa 2013.
3D-grafiikka ja pelimoottorit
Hero Quest S60-laitteelle
Generic Tool Box : Uudelleenkäytettävän projektirungon  toteuttaminen Unity-pelinkehitystyökalulle
Turmoil Games: suomalaisen peliskenen uusi tulokas
XNA peliohjelmointi  : software development demystified
Tasohyppelypelin suunnittelu mobiililaitteille
Opinnäytetyössä selvitetään, että sopiiko Unityn tekemä pelinkehitystyökalu  peliprototyyppien tekemiseen ja käydään samalla läpi Unityn ominaisuuksia. Lopussa  myös suunnitellaan ja toteutetaan peliprototyyppi 2D-tasohyppelypelistä, jossa pelaaja  ohjaa pelihahmoa planetoidivyöhykkeellä. Jokaisella planetoidilla on oma painovoimansa ja pelihahmo liikkuu näiden planetoidien pinnalla. Pelinkehityksessä käytetään Unity 2.6 -pelinkehitystyökalua ja skriptauskielenä C#-kieltä. Tarkoitus on käyttää aikaisempaa kokemusta ohjelmistokehityksestä pelinkehitykseen. Tuloksena syntyy pieni peliprototyyppi, jossa pelaajahahmo pystyy liikkumaan ja hyppimään väistellen vihollisia kentän alusta loppuun. Unity 2.6 -työkalu soveltuu erittäin hyvin peliprototyyppien tekemiseen, koska sitä oppii käyttämään suhteellisen nopeasti ja sillä saa nopeasti pelattavaa aikaiseksi. Unityn työkalu soveltuu myös suurempikokoisten pelien tekemiseen, mutta siihen tarvitaan jo syvempää kokemusta Unitystä..
Flash-pohjaisen mobiilipelin toteutus Android-alustalle
Opas peliliiketoimintaan
Pelikehitysohjelmistojen testaaminen virtuaaliympäristössä : virtualisoinnin käyttökohteita
Pelin kehitys Android-alustalle
Skriptikielet pelimoottoreissa
Projektin tavoitteena oli päivittää iOS-käyttöjärjestelmällä toimiva fysiikkaan perustuva mobiilipeli tukemaan sovelluksen sisäisiä ostoja ja toteuttaa ostoksiin liittyvä sisältö. Projekti toteutettiin omana toimeksiantona. Päivitettävän pelin ensimmäinen versio oli julkaistu tammikuussa 2013. Projektissa suunniteltiin ja toteutettiin lisäsisältö, sovelluksen sisäisen oston tuoma uudistus pelimekaniikkaan, käyttöliittymämuutokset ja turvallinen ostos suoraan mobiililaitteesta. Työn laadullisena vaatimuksena oli läpäistä Applen laatutarkistus ja tulla ladattavaksi App Store –kauppapaikalle. Projekti toteutui suunnitellun aikataulun mukaisesti ja suunnitellulla sisällöllä ja toiminnallisuuksilla. Projektissa toteutettiin myös kokonaan täysin uusi näkymä, joka suunniteltiin ja toteutettiin vasta projektin aikana. Toteutuksesta vastasi Vesa Kippola peliin nimeltä Megamassive. Projekti alkoi 6.9.2013 ja suunniteltu päivitys tuli ladattavaksi Applen App Store –kauppapaikalle 21.11.2013.
Peliohjelmointi libGDX-kirjastolla
Pelimoottorin rakentaminen HTML5-ympäristössä
Proseduraalinen sisällöntuotanto : tarkastelussa pelikentät
Strategiapelin suunnittelu ja toteutus
2d-peliohjelmointi Unityä käyttäen
Windows Phone -pelin jatkokehitys
Virtuaalipelaajan tekoälyn päättelyarkkitehtuuri vuoropohjaisessa strategiapelissä
Toiminnalliset virtuaalikaupungit
Proseduraalinen sisällön generointi
Funktio-ohjelmoinnin hyödyntäminen peliohjelmoinnissa
3D-pelin kentän suunnittelu ja toteutus
Pygame-peliohjelmointi
2D-selainpelin suunnittelu ja ohjelmointi
2D-materiaalipaketin toteuttaminen Unity Asset Store -verkkopalveluun
Peliohjelmointi
Editoripohjaisen pelikehyksen toteuttaminen
Nuorten peliohjelmointi
Riichi-pelipalvelin japanilaisilla riichi-mahjong säännöillä
Reaaliaikaisen strategiapelin kehittäminen Unity-pelinkehitystyökalulla : case Rescue 2: Everyday Heroes
PELINKEHITYS : Demosta julkaisuun
Kauppapaikkojen integrointi usean alustan peliin
MummoDance : ikääntyneille suunnattu tanssimattopeli
Pelieditorin luonti Unity 3D:ssä
MUMMODANCE : Ikääntyneille suunnattu tanssimattopeli
Koululaisen peliohjelmointikirja
Tietovisapeli yrityksen markkinointiin
HTML5-kääntötyökalujen vertailu ja testaus
2D-peligrafiikka ja animaatiot
Itsenäinen pelikehitys
Jätkänshakkipeliautomaatti
PHP-pohjaisen sovelluksen testaus
Grafiikan ohjelmointia Android-peliprojektissa (Canvas ja OpenGL ES 1.0)
3D-mobiilipelin kehittäminen Unityllä
Videopelien historia ja pelinkehitys : 2D-pelimoottoreiden vertailu
Pelinteko on kivaa
Tiivistelmä.
Windows Phone -sovelluksen kehitystyö ja julkaisu
SVG-vektorigrafiikan soveltuvuus selainpeleihin
Peliteollisuudesta on jatkuvasti tulossa suurempi ala. Samalla tulee koko ajan enemmän alustoja, jonne pelejä julkaistaan. Osaa peleistä ei koskaan jul kaista, koska yrityksillä ei ole varaa kehittää peliä loppuun asti tai kehitysvaiheessa, että peli ei ole sopiva pelaajille. Tämän opinnäytetyön tarkoituksena oli jatkokehittää Oulu Game Labissa aloitettua peli-demoa ja valmistaa se julkaisuun Google Play -kaupassa. Peliä kehitettiin alun perin Facebookiin, mutta myöhemmin ilmenneiden ongelmien takia pelistä päätettiin tehdä yksinkertaisempi versio Android-alustalle. Opinnäytetyö-projektissa käytetään Unity-pelinkehitystyökalua, jolla myös demo oli kehitetty. Teoriaosuudessa kerrotaan pelikehityksen suunnittelusta, ohjelmointikielistä ja julkaisualustoista. Lisäksi käydään läpi sitä millaisia ongelmia ohjelmoinnissa voi tulla vastaan ja miten ohjelmasta voi tehdä mahdollisimman toimivan, helposti päivitettävän ja koodista mahdollisimman uudelleen-käytettävän. Projektin lopputuloksena Hamsterscape Weekly Challenge -peli julkaistiin Google Play-kaupassa. Kehitystyötä voi jatkaa kehittämällä samasta pelistä versiot Windows Phone- ja IOs alustoille. Tulevaisuudessa peliin suunnitellaan viikoittain vaihtuva kenttä, jolloin pelaajilla pysyy mielenkiinto peliin.
Tekoälyn ohjelmointi shakkipelille
Tämän opinnäytetyön tarkoituksena on suunnitella ja toteuttaa peli Unityä ja Blenderiä käyttäen PC:lle. Peli on yhdistelmä tasohyppelyä ja reverse tower defenseä. Teoriassa käydään lyhyesti läpi videopelien historiaa, Unityn ja Blenderin käyttämistä sekä pelissä käytettäviä genrejä. Käytännön osiossa kerrotaan pelin ohjelmoinnista, 3D-mallien luomisesta ja kentän toteutuksesta. Opinnäytetyön tuloksena syntyy prototyyppi pelistä, jota haluttaessa voidaan jatkokehittää loppuun asti. Toinen tekijöistä keskittyy ohjelmointiin ja toinen pelin visuaaliseen ulkonäköön. Pelissä pelaajan tehtävänä on päästä kentän loppuun elossa samalla, kun kentässä olevat tornit ampuvat pelaajaa. Pelaajaa on myös estämässä tasohyppelyelementtejä, kuten rotkoja ja liikkuvia alustoja. Päivittämistä varten pelaaja ansaitsee rahaa sitä enemmän, mitä pidemmälle hän pääsee kuolematta. Pelaaja pystyy päivittämään elämäänsä, jolloin hänen on mahdollista selviytyä pidempään. Pelaajalla on lisäksi mahdollisuus käyttää suojakilpeä, jota voi päivittää. Opinnäytetyön tavoitteet saavutettiin ja tuloksena syntyi toimiva prototyyppi pelistä. Peli sisältää toimivat pelimekaniikat, mutta esimerkiksi visuaalinen puoli on prototyyppitasolla. Opinnäytetyön aikana opittiin lisää ohjelmoinnista, 3D-mallintamisesta ja Unityn käyttämisestä.
Moninpelimuodon kehittäminen kaupalliselle pelimoottorille
Tämän työn tarkoituksena oli suunnitella ja tehdä peli Android-käyttöjärjestelmälle ja PC-tietokoneille. Pelin teossa käytettiin Libgdx-kehitysympäristöä, joka sisältää Box2D-fysiikkamoottorin ja OpenGL-grafiikkakirjaston. Ohjelman koodikielenä toimii Java. Suunnittelemani peli on fysiikanlakeja hyödyntävä ongelmanratkontapeli, jossa pelaajan tehtävänä on saada liikutettua pallo lähtöpisteestä A kentän toiselle puolelle loppupisteeseen B. Pelaajalla on käytössään erilaisia objekteja joiden avulla luodaan rata, jota pallo kulkee. Objektien luomisessa on otettu huomioon Android-laitteiden kosketus-näyttö ja objektit luodaan piirtämällä ne näytölle. Peli sisältää kolme kenttää ja peliin on luotu valikko, josta pelaaja voi valita mitä pelin kolmesta kentästä hän haluaa pelata. Kentissä on esteitä, jotka vaikeuttavat pallon liikkumista ja näin vaikeuttavat kenttien läpipääsyä. Kenttien vaikeustaso kasvaa pelin edetessä. Pelissä on myös kamera, jota käyttäjä pystyy zoomaamaan ja liikuttamaan, sekä taustamusiikkia ja ääniefektejä.  Tarkoituksena on tehdä peliin vielä lisää kenttiä ja objekteja ja kun peli on valmis, se aiotaan julkaista Android-käyttöjärjestelmälle Google Play -kaupassa.
Käyttäjäkokemuksen parantaminen opetuksellisessa pelissä
Ajatus peliaiheisen opinnäytetyön tekemisestä syntyi Oulu Game Labissa. Pelikehitys vaikutti mielenkiintoiselta opinnäytetyöaiheelta ja samalla saisi kokemusta pelialan työtehtävistä. Aikataulullisista syistä projektille ei etsitty toimeksiantajaa. Opinnäytetyön tavoitteena oli syventää ymmärrystä Unity3D-pelikehityksestä, pelisuunnittelusta ja tuottaa 2D-tasohyppelypelin runko, jota voidaan halutessa jatkokehittää. Projektin tietoperusta koostuu pelisuunnittelu- ja peliohjelmointikirjallisuudesta ja Internetin Unity3D-työkalun 2D-pelikehitystä käsittelevistä oppaista. Pelin kehitettiin Unity3D-kehitystyökalun 4.1.2-versiolla ja toteutuksessa käytettiin C# ohjelmointi-kieltä. Asetetut päätavoitteet saavutettiin. Opinnäytetyön toiminnallista osuutta varten luotiin lyhyt pelisuunnitelma. Lopputuloksena on toimiva 2D-tasohyppelypelin runko, joka on helposti mukautettavissa erilaisten peli-ideoiden ympärille. Opinnäytetyö voi myös toimia oppaana Unity3D peli-kehityksestä kiinnostuneille.
Etäkuntoutusjärjestelmän suunnittelu ja kehitys
Reaaliaikaisen moninpelipalvelimen toteutus Node.js:llä
Lautapelimaailma-pelitulospalvelu
Tetris-verkkopelin toteutus Javalla
3D-pelinkehitys mobiililaitteille
