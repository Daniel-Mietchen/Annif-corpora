http://www.yso.fi/onto/yso/p13591 C#
C# C#
Tarvitaanko adaptoituvia tietorakenteita
Valmistuksenohjausjärjestelmän suunnittelu ja toteutus
Tietorakenteet ja C-kieli
Suuri C++ ohjelmointi : opettele itse olioperustainen ohjelmointi
Kaksisuuntaisen mielialahäiriön omahoidon tietojärjestelmän kehittäminen
C.t. studd, jumalan hullu
S60-sovelluksen lokalisointi
Info- ja raporttiportaali
Opeta itsellesi C++
Hengellisen troopin jäljillä : allegoria C. S. Lewisin Narnia-sarjassa
C++-opas hypertekstimuodossa
Ajonaikainen käyttöliittymä Dymatic-200PCW-jarruntestausjärjestelmään
Verkon laitteiden valvonta teollisuusympäristössä
SmartCard API : luokkakirjasto älykortin lukemiseen
Ohjelmointi++
Ekstranetin luominen BTJ Finland Oy:lle
Langattoman vapahälyttimen vastaanotin
Maemo 5 ja Windows Phone 7 – Sovelluskehitysprosessien vertailu
Automatisoitu virranvalvontajärjestelmä
Hybridiohjelmointi
Windows-pohjainen työnhallintajärjestelmä : C#- & DOT.NET-tekniikoilla
Levdoc Global dokumentaatiotilausjärjestelmä
C-kielen tehokurssi
Peliohjelmoinnin koulutusmateriaali
Projektityöläisen Päiväkirja -sovellus
Langaton lämpötila- ja kosteusmittausjärjestelmä ZigBee-protokollaa käyttäen
Testauspuomiston suunnittelu : Poraosio
Työajanhallintajärjestelmä
Musiikki-instrumentti -ohjelman suunnittelu ja toteutus iOS-käyttöjärjestelmään
Frida Kahlon myyttiset kuvat jungilaisessa valossa
Johdatus ohjelmointiin
Tilakoneen toteuttaminen päätesovellukseen
Web-pohjainen mallinnusohjelma
CRP:n vieritutkimus ja hoitopäätöksen tekeminen : kyselytutkimus Turun kaupungin terveysasemien hoitohenkilökunnalle
Edistynyttä ohjelmointia : sophisticated programming
Hepatiitti C -infektion riskitekijät Suomessa
C++/Qt-Käyttöliittymäsovellus
Terveydenhuollon potilastietojärjestelmän laskutusjärjestelmä
Hepatiitti C aisoihin
Suuri C++ -ohjelmointi
Ohjelmointi 1 : C#
C-ohjelmointi
Lange Server : Graafinen käyttöliittymä
Ultraäänikameran prototyypin käyttösovellus PC-ympäristössä
Verkkosovellus älykkääseen laiteohjaukseen
KoBu-kotibudjettiohjelma
Koksaamon viikkopalaverin tuotantoraportit
Turvallinen koulupäivä on Työterveyslaitoksen ja HAAGA-HELIA amk:n yhteistyönä toteutettu Flash ActionScript 2 -kielinen opetuspeli. Toteutetussa versiossa käytettiin ulkoisia tiedostoja lähes kaiken pelin dynaamisen tekstimuotoisen sisällön tallentamiseen. Tekstisisällön muokkaamista varten oli myös kehitetty erilliset ylläpitosovellukset ja PHP-kieliset palvelinohjelmat. Ongelmana ratkaisussa oli pääasiassa kohdepalvelimen PHP-tuen puuttuminen. Tämän projektin tavoitteena, Työterveyslaitoksen toimeksiannosta, oli kehittää olemassa ratkaisusta IIS-palvelimella, ASP.NET-ohjelmakehyksessä toimiva ja jonka sisältöteksti tallennetaan SQL Server 2005 -tietokantaan. Projektin tavoitteena oli myös tuotetun ratkaisun asennus Työterveyslaitoksen palvelimelle ja testaus. Lisäksi tavoitteena oli teknisen dokumentaation laatiminen pelistä, ylläpitosovelluksista, palvelinohjelmista sekä tietokannasta. Oppimistavoitteina työssä olivat pääasiassa uusi palvelinympäristö, uusi ohjelmointikieli ja projektin hallittu eteneminen. Projektin tavoitteisiin ei kuulunut lopullisten sisältötekstien laatiminen, eikä peliin mahdollisesti samaan aikaan tehtävien, sisältöä koskevien muutosten kuvaus. Projektin edetessä tavoitteisiin lisättiin myös käyttöohjeiden laatiminen ylläpitosovelluksille ja pelin tekninen dokumentointi korvattiin jatkokehitykseen opastavalla dokumentoinnilla. Projektin tavoitteista tekstisisällön ylläpitoon kuuluvat tulokset valmistuivat ensimmäisellä seurantakaudella. Näitä tuloksia olivat XML-muotoista tietoa sisältävän SQL Server 2005 -tietokannan suunnittelu ja toteutus, tietokantaa käyttävien ASP.NET-ohjelmakehyksessä toimivien, C#-kielisten palvelinohjelmien suunnittelu ja toteutus, Flash ActionScript 2 -kielisten ylläpitosovellusten kehittäminen siten, että ne pyysivät tietoa toteutetuilta palvelinohjelmilta. Tämän lisäksi ylläpitosovellusten käyttöohjeet toteutettiin samalla. Toisella seurantakaudella projektin tavoitteista saavutettiin peliin tehtävät, tarvittavat muutokset sekä pelin jatkokehitykseen opastava dokumentointi. Kaikkien projektiin kuuluneiden osien toimivuutta testattiin yhteensä kolmella eri palvelimella sekä kahdella virtuaalipalvelimella. Projektille asetetuista tavoitteista kohdepalvelimelle asentamista ei voitu suorittaa projektille asetetun määräajan puitteissa, pääasiassa koska kyseisen palvelimen sisältöä oltiin juuri ulkoistamassa. Samasta syystä uudelle ratkaisulle ei voitu suorittaa luotettavaa testausta. Projekti kuitenkin päätettiin aikataulusyistä muiden tulosten ollessa valmiita ja asennus sekä testaus siirrettiin projektin jälkeisiin jatkotoimenpiteisiin.
C-kielen perusteet : v. 2.0
Carsinogen : Kauko-ohjattavan lentokoneen hallintaohjelmisto
Aikakauslehtiartikkeleiden arviointi
Odensen kuuluisa satusetä
Tässä opinnäytetyössä järjestettiin jo aiemmin toteutetulle Scalable Inventory System -nimiselle inventaariojärjestelmälle käyttöönottotestaus, laadittiin koko järjestelmän kattava dokumentaatio ja otettiin järjestelmä käyttöön Oamkin tek-niikan yksikössä. Viivakoodipohjainen inventaariojärjestelmä koostuu kahdesta C#-kielellä kirjoitetusta yksiköstä, joista SIS Clientilla toteutetaan tuotteiden lainaus- ja palautustoiminnot ja SIS Managementilla hallitaan tuotteita, tuotekategorioita ja tuotteita varastoivia tiloja MySQL-tietokannassa. Tavoitteena oli lisäksi tunnistaa järjestelmän jatkokehitystarpeet. Ennen käyttöönottotestausta järjestelmä sisälsi sen toiminnan kannalta kriittisiä ohjelmavirheitä, jotka paikannettiin ja korjattiin. Käyttöönottotestaus suunniteltiin kattamaan kaikki SIS-yksiköiden perustoiminnot ja lukuisia erityistapauksia. Kolme testihenkilöä suoritti itsenäisesti kaikki testitapaukset ja täytti testauspöytäkirjat, joiden pohjalta laadittiin testausraportti. Testauksen tulosten varmistuttua tehtiin tarvittavat korjaukset ja järjestettiin järjestelmän käyttöönotto asentamalla tarvittavat laitteistot ja ohjelmat erääseen hanketilaan ja inventoimalla sen tuotteet järjestelmään. Lisäksi järjestelmästä laadittiin englanninkielinen tekninen dokumentaatio ja sitä tukeva Doxygen-dokumentointityökalulla generoitu tiivistelmä lähdekoodin rakenteesta.Opinnäytetyön tuloksena Scalable Inventory System saatettiin toimintakuntoon ja varsinaiseen käyttöön. Työn ohessa syntyi lukuisia kehitysideoita, joiden toteuttamista voidaan harkita tulevissa projekteissa. Avuksi uusille sovelluskehittäjille laadittiin kattava dokumentaatio, jonka avulla perehtyminen järjestelmän rakenteeseen on jatkossa helpompaa. Oheistuotteena syntyi myös ohje C#- ohjelmointikielen dokumentoinnista, jota hyödynnetään tulevissa projekteissa yhdenmukaistamaan lähdekoodin kommentointi- ja dokumentointikäytäntöjä.
C-vitamiinin määritysmenetelmän validointi
Hallinnoimattomat dll-tiedostot ja automaatiotestaus
Tiivistelmä.   Tämän opinnäytetyön toimeksiantaja oli Rautaruukki Oyj:n Raahen terästehtaan koksaamo. Työn tavoitteena oli päivittää koksaamon viikkopalaverissa käsiteltävät Excel-raportit web-muotoon ja samalla automatisoida raporttien päivitys. Työ sisälsi web-pohjaisten raporttien suunnittelun, ohjelmoinnin, testauksen sekä julkaisun.     Raportit pyrittiin toteuttamaan mahdollisimman helppokäyttöisiksi loppukäyttäjiä ajatellen. Työtä toteutettaessa otettiin huomioon raporttien päivitettävyys sekä ylläpito. Opinnäytetyön tekoon käytetyt aineistot on kerätty Ruukin omista esitysmateriaaleista, aihealueisiin liittyviltä verkkosivuilta ja alan kirjallisuudesta.     Työn tuloksena saatiin automaattisesti päivittyvät web-pohjaiset materiaalien ja tuotannon seurantaraportit koksaamolle. Raporttien toteutus näkyy loppukäyttäjille WWW-selaimessa eikä vaadi erillisiä ohjelmistoja. Opinnäytetyö toteutettiin syksyn 2011 sekä alkuvuoden 2012 aikana. Opinnäytetyön teossa käytettiin pääasiassa C#-ohjelmointia, SQL-tietokantaohjelmointia sekä web-ohjelmointitekniikoita.
Sähköinen matkaraporttilomake
Verkkokauppa kyselyille
Tietokannan kehittäminen kodinmonitorointijärjestelmän sensorimittauksille
Ohjelmoinnin alkeet C-kieltä käyttäen : oheismateriaalia itseoppijalle
Kappaleen asennon tunnistus sulautetussa järjestelmässä
Maksimivoimamittarin algoritmikehitys
BuildServer-ohjelma EB Propsim -radiokanavaemulaattoreille
Ester-C jenkkien monitehovitamiini
Visual C++ 6 : ohjelmoijan käsikirja
Videoiden järjestely .Net-sovelluskehyksellä
Bluetooth-mittausdatan ja videokuvan synkronointi
Windows-pohjainen työnhallintasovellus : c#- ja dot.net -tekniikoilla
Ohjelmoinnin peruskurssi C-kieltä käyttäen
C-ohjelmointikieli
TM500-testiohjelmisto
Työajanseurantajärjestelmä
C-ohjelmointia tukevan tutoriaalin valinta WWW:stä
Tiivistelmä: Ohjelmapohjan toteuttaminen TFT-näytön käyttöönottoa varten. Insinöörityön tavoitteena oli toteuttaa ohjelmapohja TFT-näytön ohjaamiseen. Ohjelmapohja tehtiin Amplition Oy:n käyttöön, ja sen tarkoitus on helpottaa TFT-näyttöjen käyttöönottoa tulevissa projekteissa. Opinnäytetyössä valittiin kehitysympäristö yrityksen ennalta valitsemalle mikro-ohjaimelle.   Työssä käytettiin SAM3S-EK2-kokeilukorttia ja siinä olevaa Atmel SAM3SD8 -mikroohjainta. Kehitysympäristöksi valittiin IAR Embedded Workbench for ARM -ohjelma. Valintaan vaikuttivat asiantuntijan mielipide, monipuoliset työkalut ja esimerkkiohjelmien sekä tuen saatavuus. Insinöörityössä käytettiin myös Ramtex Graphic Dot Matrix Color LCD Driver -grafiikkakirjastoa sekä Color LCD Icon Editor -ohjelmaa. Ennen varsinaisen ohjelmapohjan kehittämistä tutustuttiin kokeilukortin ominaisuuksiin ja internetistä saataviin esimerkkiohjelmiin. Piirivalmistajat tarjoavat useasti esimerkkiohjelmia ja valmiita kirjastoja, joita voidaan hyödyntää tuotekehityksessä. Atmel tarjoaa kattavat kirjastot insinöörityössä käytetylle kokeilukortille, ja näitä kirjastoja hyödynnettiin myös ohjelmapohjaa luotaessa. Ohjelmapohjaan integroitiin myös grafiikkakirjasto, jotta ohjelmalla pystytään tulostamaan näytölle helposti grafiikkaa. Grafiikkakirjasto on kokoelma funktioita, joiden on tarkoitus helpottaa ohjelmoijan työtä. Kirjastossa on valmiit funktiot yksinkertaisien kuvioiden piirtämiseen näytölle sekä funktiot, joiden avulla näytölle saadaan vietyä valmis kuva. Kirjastoon voi myös lisätä itse tehtyjä fontteja. Lopputuloksena työssä saatiin sovellusohjelma, joka todistaa ohjelmapohjan toimivuuden. Sovellusohjelma tulostaa näytölle mediasoittimen käyttöliittymän, jossa on tekstiä, kuva ja symboleita, sekä juokseva kello. Sovellusohjelmassa käytetään myös yhtä kokeilukortilla olevaa painiketta, joka esittää mediasoittimen play/pause-nappia. Lopputulosta voidaan pitää onnistuneena, koska ohjelmapohja toimii, ja näytölle pystyttiin tulostamaan halutut asiat. Lisäksi ohjelmapohjan ansiosta käyttöliittymän grafiikan päivittäminen on helppoa.
MIFARE DESFire EV1 -tunnisteiden automaattisen testaus- ja alustusohjelman suunnittelu ja toteutus Idesco Oy:n tuotantorobottiin
Lua-tuen toteuttaminen pelimoottoriin
SQLite-tietokantaratkaisu C#-pohjaisessa pelissä
Reaaliaikainen hälytyssovellus
ILPPIS-huoltorekisteri
C-hepatiitti : Lääkäripäivillä kuultua : Lääkäripäivät 2000.
AMYGUI - graafisten käyttöliittymien laatimiseen tarkoitetun C++ -luokkakirjaston suunnittelu ja toteutus Amiga-ympäristöön
C++ -ohjelmoinnin alkeet
Personoitava yhteenvetonäkymä graafisista raporteista
Web-kehitys ASP.NET MVC:llä
Ohjelmiston asennustyökalut
Hupia kerrakseen
Liittopalkki mallinnustyökalun kehittäminen Tekla Structures Open API ohjelmointirajapinnalla
Tässä opinnäytetyöprojektissa kehitettiin kaksisuuntaisen mielialahäiriön omahoitoon tarkoitettu tietojärjestelmä, jonka avulla kaksisuuntaista mielialahäiriötä sairastava henkilö voi käsitellä ja tallentaa terveyttään koskevia tietoja, sekä tulostaa raportteja tietoihin perustuen. Tällaisia tietoja ovat esimerkiksi mieliala, käytetyt lääkkeet ja unen määrä. Sovellus on desktop-sovellus, joka on suunniteltu Windows Vista käyttöjärjestelmän kanssa käytettäväksi. Sovelluksen tuottamat raportit ovat puolestaan Microsoft Office Word-muotoisia. Sovelluksen kehittämisen osana luotiin myös määritys- ja suunnittelukuvasto. Projektin ei-toiminnallisia vaatimuksia olivat Microsoft Solution Framework for Agile Software Development-prosessimallin (MSF for Agile) käyttäminen ja UML-kuvauskielen käyttö määritys- ja suunnittelukuvastoissa. Lisäksi projekti asetettiin käyttämään .NET 3.5-teknologioita mukaan lukien Windows Forms, C#-ohjelmointikieli ja Language Integrated Query-teknologia. Tiedon pysyväistallentamiseen projekti käytti MS SQL Server 2005 Compact Edition tietokantapalvelinta. Työvälineinä projekti asetettiin käyttämään Visual Studio 2008 Professional Editionia yhdessä Team Foundation Server-palvelimen kanssa. Jälkimmäistä käytettiin lähinnä versionhallintaan sekä projektihallinnon apuvälineenä työmäärien laskennassa ja vielä tekemättä olevien tehtävien hallinnoimisen apuna. Teknisen näkökulman ohella projektin tavoitteena oli evaluoida erilaisia tekniikoita mukaan lukien MSF for Agile-prosessimallin ja Team Foundation Serverin käyttö pienen projektin kannalta. Lisäksi arvioitiin MS SQL Server CE:n käytön ja Language Integrated Query-teknologian käytön tuomaa hyötyä. Myös käyttäjätestausta kokeiltiin ja sen hyötyjä arvioitiin projektin osana. Tärkeinä oppimistavoitteina pidettiin kirjoittajan osaamisen lisäämistä projektin hallinnassa, sovelluskehityksen tekemisessä ketterän menetelmän mukaisesti sekä osaamisen syventämistä .NET-teknologioissa.
Tiedonsiirtorajapinnan toteutus Mifare DESFire -tunnisteiden ohjelmointisovellukseen
Code Contracts ja ComTest-yksikkötestausgenerointi .NET-kielissä
Standardimallikirjaston käyttö sulautetussa tietoliikenneohjelmassa
CMDB : Konfiguraatiohallintatietokanta
Symbian OS v7.0s Series 80-laitteissa : opinnäytetyö
Tietokantapohjaisen pelin kehittäminen : ActionScript 2, ASP.NET ja SQL Server
Lineaarisuus ja vertikaalisuus Terry Rileyn sävellyksessä In C
Tulostaulu SiiPelle
Ohjelmapohjan toteuttaminen TFT-näytön käyttöönottoa varten
Sanomanvälitysserverin suunnittelu- ja toteutusprojekti : Tapaus: Tietokarhu Oy
Multiplatform-mobiilisovelluksen kehittäminen Qt 5.2:lla
Kiinteistöautomaatiojärjestelmien etäkäyttöliittymäsovellus
Automaattinen ovikello
Ideapankin vaatimusmääritys ja prototyyppi : case: HAAGA-HELIA ammattikorkeakoulu
Kustannusten seurantaohjelma
Oliotietokantastandardi ODMG C++-ohjelmoijan näkökulmasta
Askorbiinihappo-isomeerien faasidiagrammin sekä kuivattujen marjamehujen C-vitamiinipitoisuuden määritys DSC-menetelmällä
Markkinointiprosessien tuotannonhallintajärjestelmän toteuttaminen :NET-arkkitehtuurilla
[70 vuotta satusetä H. C. Andersenin kuolemasta]
Mallinnus- ja materiaalilaskentaohjelmiston kehitys
Hepatiitti C - vielä epäselvä tulokas hepatiittivirusten kirjoon
Windows Phone -pelin jatkokehitys
SPR Veripalvelu käynnisti hepatiitti C -tutkimuksen
Etäisyyden mittaaminen stereokameran ja OpenCV kirjaston avulla
C-kieli
Ohjelmointi : pro training
Avoimen lähdekoodin sovellus ohjelmoinnin opetuskäyttöön
Liikuntapaikkojen web-pohjainen mallinnus-ohjelma
Ohjelmoinnin perusrakenteet
Flash-muistin ohjelmointityökalun päivitys Windows-ympäristöön
Sulautetun prosessinseurantalaitteen käyttöliittymä
Opeta itsellesi C
Suositus neuvonnasta hepatiitti C-viruksen tarttuvuutta koskevissa tavallisimmissa kysymyksissä
Protokolla-analysaattorin liittäminen tietokoneeseen ja sovellusohjelman teko
C/C++ ohjelmointi : ohjelmointikurssi 2
Raportointisovelluksen kehittäminen matkapuhelintuotantoon
Kaapelien testauslaitteen suunnittelu ja toteutus
Siirtyminen Visual Basic .NETistä C#:iin tietojenkäsittelyn koulutusohjelmassa
C-kielen tiedostonkäsittelymuodot sekä aliprosessit
MVC-arkkitehtuurin käyttökelpoisuus verkkosovelluksen toteuttamisessa käytettäessä C#-kieltä
Tekla Structures -liitoksen kehittäminen
DTJ-sovellus
Opinnäytetyön aiheena oli vedonlyönnin optimointityökalun ideointi ja kehittäminen. Tavoitteena oli, että ohjelmaan voitaisin ladata otteluiden tuloksia ja kerroindataa menneiltä kausilta sekä simuloida ohjelmaan ohjelmoiduilla tilastollisilla malleilla vedonlyöntimenestystä. Ohjelman kehitystyö toteutettiin Mircosoftin Visual Studiolla C#-kieltä sekä Microsoftin Access-tietokantaa käyttäen. Opinnäytetyössä esitetään myös esimerkkinä ohjelmalla tuotetulla mallilla tehty simulaatio edellisen kauden tuloksista sekä verrataan niitä opinnäytetyön aikana olleen kauden tuloksiin, kun malli oli oikeassa vedonlyöntikäytössä. Lopputuloksena saatiin kehitettyä ohjelmisto, jolla voidaan tutkia erilaisia vedonlyönnin ilmiöitä sekä kehittää tilastollisia malleja, joilla ennustaa otteluiden lopputuloksia sekä löytää tuottavia sijoituskohteita.
C-käsikirja
Johdatus ohjelmointiin : 1998-1999
C++ algoritmit ja mallit
ARM-opetusympäristön kehittäminen
Moniperintä C++-, Eiffel- ja Java-ohjelmointikielissä
Opinnäytetyön aiheena oli muuntaa Symbianille tehty mobiilisovellus Qt:lla monialustaiseksi skaalautuvaksi sovellukseksi. Muunnettu ohjelmisto on Daisyperhepäivähoitosovellus, jolla voidaan hoitaa lasten päivähoitoon liittyviä asioita mobiilisti. Tässä työssä sovellus muunnettiin toimimaan sekä Android- että iOSkäyttöjärjestelmissä. Ohjelmointi toteutettiin Qt 5.2 -ohjelmointiympäristössä. Käyttöliittymät ohjelmoitiin QML:llä ja toiminnallisuus C++:lla. JNI-ominaisuudet ohjelmoitiin Javalla. Työn aiheena ollut mobiilisovellus saatiin muunnettua monialustaiseksi skaalautuvaksi sovellukseksi ja sille asetetut tavoitteet saavutettiin.
C++-ohjelmointikurssin oheismateriaali
Sähköisen valohoitokaavakkeen toteuttaminen .NET-arkkitehtuurilla
Selainpohjaisen sovelluksen toteuttaminen .NET ympäristöllä
Scalable Inventory System -järjestelmän testaus, dokumentointi ja käyttöönotto
Topology C# testaus ja kehitys
CANopen-tiedonsiirto-ohjelma Linux- käyttöjärjestelmälle: Metropolian ConceptCar- hanke
Tiivistelmä: Symbian OS v7.0s Series 80-laitteissa.
GSM-moduuli sulautetussa järjestelmässä
Tämän opinnäytetyön tarkoituksena oli kehittää ohjelmoinnin perusteiden opetuksen avuksi soveltuva sovellus. Ohjelmointikielenä oli C# ja kehitysympäristönä toimi Microsoftin Visual Studio. Sovellus toteutettiin Windows Presentation Foundation-työpöytäsovelluksena. Teoriaosuudessa käydään läpi C#:n historiaa, ominaisuuksia ja kehitysympäristö Visual Studiota. Olio-ohjelmointi saa oman osuutensa ja ohjelmoinnin opetuksen historiaa ja opetusmetodeja käydään lyhyesti läpi. Myös avoimesta lähdekoodista kerrotaan kattavasti tärkeimmät seikat. Raportin käytännön osuudessa käydään läpi sovelluksen rakennetta, toimintaa ja katselmoidaan miten ohjelma toimii. Kuvituksena olevat lukuisat kuviot auttavat ymmärtämään ohjelmakoodia paremmin. Sovelluksen ideana on antaa käyttäjälle ohjattavaksi robotti, jota hän pystyy käyttöliittymän kontrollien avulla käskemään tekemään erilaisia toimintoja. Näitä ovat muun muassa liikkuminen alueella, piirtäminen ja piirron eri ominaisuudet kuten piirtoviivan väri, tyyppi ja paksuus. Käyttäjä pystyy myös ohjelmoimaan sovellukseen uusia toimintoja robotille valmiiksi määriteltyjen ominaisuuksien avulla. Työn tuloksena syntyi helppokäyttöinen ohjelma, jota käyttämällä ohjelmoinnin perusteita opetteleva käyttäjä pääsee tutkimaan WPF-sovelluksen peruselementtejä ja kontrolleja. Hän oppii yksinkertaisen käyttöliittymän avulla tunnistamaan, miten esimerkiksi kontrollien toiminnallisuuden mahdollistavat tapahtumametodit toimivat. Kevyt käyttöliittymä aktivoi käyttäjää tutkimaan sovelluksen toiminnallisuutta tarkemmin. C# ja WPF todistivat loogisella ja toimivalla käytettävyydellään olevansa todella hyvä vaihtoehto Windows-pohjaisten työpöytäsovellusten kehittämiseen.
Pelieditorin luonti Unity 3D:ssä
WLAN-verkon jatkuvatoiminen tiedonkeruujärjestelmä
Kalanviljelylaitoksen päiväkirjan automatisointi
Virtuaalitehtaan ohjelmiston kehitystyö
Vedonlyönnin optimointityökalun kehittäminen
Modulaarisen ohjaussysteemin testijärjestelmä
Hepatiitti C ja äitiys
Yleiskäyttöinen tiedostojenhallintamoduuli .NET-pohjaisille palveluille
Ohjelmoinnin perusteet ja C-kieli. Osa 2
Kahden kulttuurin kuilussa
Vanhentuneen sanomanvälitysohjelmiston korvaus
Ohjelmoinnin opetusmateriaalin modernisointi
LINQ : ohjelmointikieleen yhdistetty hakuarkkitehtuuri
IOS-asiakassovellus tuntienseurantajärjestelmään
Saapuvan aineiston varasto
Ohjelmoinnin perusteet : C++ : opintomoniste
Web-pohjainen tietokannan hakutyökalu
.NET -sovellusarkkitehtuuri : case: ApiTaMo .NET client -suunnitelma
ACD-Tool Mobile : Diagnostiikkasovelluksen siirtäminen mobiiliympäristöön
C-vitamiini ja terveys
DX 200 -pohjaisten keskusten verkkoelementtien rekisterimerkinantotiedostojen ja johtomerkinantotiedostojen paketointityökalu
Puheluraportointisovellus
Eräs tapa julistaa
C#-kielen ominaisuuksia
Soittolistojen hallintatyökalu Avaya Contact Center -järjestelmään
Optikon ja silmälääkärin sähköinen potilastietojärjestelmä
Sähköpyörätuolin toimintojen kehittäminen
Johdatus C++ -ohjelmointikieleen
Tiivistelmä.
Tuotetietokanta ja käyttöliittymä
Materiaalimäärälaskentaohjelman offline-tila
Koksaamon kehitysympäristön trendinäyttöjen siirto tuotantoympäristöön
Tiivistelmä: Insinöörityössä tutkittiin, minkälaisia etuja voidaan saavuttaa ohjelmoimalla tietokoneohjelma useammalla ohjelmointikielellä. Tutkimuksen tuloksia hyödyntäen toteutettiin julkaisualan ohjelmistoyritys Anygraaf Oy:lle ohjelmamoduuli, jolla voidaan mallintaa visualisesti tietokannassa olevaa dataa kuvaajin ja taulukoin. Tutkimus aloitettiin selvittämällä, miten ohjelmointikieliä voidaan jaotella ryhmiin ja mitä heikkouksia ja vahvuuksia erilaisilla ohjelmointikielillä on. Tutkimuksesta selvisi esimerkiksi, että joidenkin ohjelmointikielien vahvuus on lopputuloksena syntyvä suorituskykyinen ohjelma mutta kielellä ohjelmointi on raskasta ja hidasta. Joissain ohjelmointikielissä tilanteen havaittiin olevan päinvastainen. Seuraavaksi tutkittiin menetelmiä joilla tällaisia ohjelmointikielipareja voidaan yhdistää. Havaittiin, että on olemassa niin sanottuja vieraan funktion rajapintoja, jotka mahdollistavat ohjelmointikielien väliset operaatiot. Hybridiohjelmoinnille ja vieraan funktion rajapintojen käytölle löydettiin sovelluskohteita niin mobiiliohjelmista kuin perinteisistä työpöytäsovelluksistakin. Mahdollisia sovelluskohteita ovat muun muassa monialustaiset mobiiliohjelmat, suorituskykykriittiset ohjelmat sekä valmiiseen ohjelmaan jälkikäteen toteutettavat ohjelmalaajennukset. Insinöörityössä toteutettu ohjelmamoduuli toimii esimerkkinä hybridiohjelmasta. Ohjelmamoduuli toteutettiin C++ -kieliseen ohjelmaan, mutta kuvaajien ja taulukoiden luomiseen käytettiin JavaScript-kielistä kirjastoa, jqPlotia. Erikieliset osuudet yhdistettiin tutkimuksessa esitellyin keinoin. Lopputuloksena syntyneellä ohjelmamoduulilla voidaan tuottaa graafista sisältöä esimerkiksi lehtiartikkeleihin tai yrityksen sisäistä seurantaa tukevia kuvaajia.
MegaSquirt : Asennus, säätäminen ja ohjelmointi
Peli OpenTV-ympäristöön
Yleiskatsaus Botnetteihin ja C&C-liikenteeseen
Opi C-ohjelmointi helposti
IP-pakettien suodatus moniydinverkkoprosessorilla
C#-ohjelmointi
Abstract: Projektityöläisen Päiväkirja application.
Sovellusympäristö ja käyttöliittymäkirjasto monikosketuslaitteisiin
Tietoturvallisuuden kartoitusohjelma
