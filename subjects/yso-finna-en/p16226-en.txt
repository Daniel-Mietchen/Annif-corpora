http://www.yso.fi/onto/yso/p16226 Emacs
Emacs
Smart syntax highlighting for dynamically typed languages : Case: Common Lisp in Emacs
The GNU make book
GNU Emacs manual : Emacs version 18 for Unix users
Smart syntax highlightning for dynamically typed languages : case study: Common Lisp in Emacs
"Covers GNU Make basics through advanced topics, including: user-defined functions, macros, and path handling; creating makefile assertions and debugging makefiles; parallelization; automatic dependency generation, rebuilding targets, and non-recursive Make; and using the GNU Make Standard Library"--
Your UNIX/Linux : the ultimate guide
Learning GNU Emacs
Today, Java, C++ and C# being the most popular programming languages, the majority of integrated development environments are tailored for them, and, in general, for staticallytyped languages. However, dynamically-typed languages are gaining more and more popularity;  thus, integrated development environments must evolve to support them. The purpose  of this thesis was to improve the situation by creating an advanced syntax highlighting system for dynamically-typed languages. This study developed a general framework for implementing an advanced syntax highlighting system for integrated development environments. A proof-of-concept implementation was developed in Common Lisp language using Emacs. The developed framework makes it possible to create syntax highlighting system that provides sophisticated scope detection and symbol extraction systems allowing an integrated development environment for dynamically-typed languages to possess the same language analysis features as the ones designed for statically-typed languages. The study concludes that there are still many unexplored, potential improvements that could be made for integrated development environments in order to increase a programmer's productivity.
Writing GNU Emacs extensions
