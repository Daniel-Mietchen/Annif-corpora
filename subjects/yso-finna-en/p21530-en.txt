http://www.yso.fi/onto/yso/p21530 software development
software development
Structured software development with the IPIDDDT method : a lean method for small agile organizations
Software testing practices in Finland
The Design of Temperature and Humidity Chamber Monitor and Controller
Changing the planning for agile and lean software development : from roadmapping to continuous planning
Ideas for the next generation process authoring tool
Running an agile software development project
Onboarding for a large and agile software develpment project.
Comparing Google’s Android and Apple’s iOS Mobile Software Development Environments
Professional iPhone and iPod touch programming : building applications for Mobile Safari
Product-Focused Software Process Improvement : 15th International Conference, PROFES 2014 : Helsinki, Finland, December 10-12, 2014 : Proceedings Volume 2
The purpose of this project was to design and implement the Tin Phong Sales Management System. The Tin Phong Sales Management System is a sales management system offers services of handling customer, product, stock and sales data. The implementation of Tin Phong Sales Management System was based on system and software requirements specifications that were also analyzed at Haaga-Helia in Autumn 2008 and was developed for Tin Phong Trading Co., Ltd. Tin Phong Trading Co., Ltd. is spare spare-parts trading company located in Ho Chi Minh city, Vietnam. There are three different categories of sales are in Tin Phong Trading Co., Ltd.; retail, Wholesale and contract sales where information about these sales as well as customer and product related information is stored on paper based information which often causes problems in data storage, data transferring and sometimes data lost where one can understand how time consuming it is to search and find information when needed or how much it can cost the company if a given information is lost. This project was carried out as student Thesis with which there is a time limitation, due to this limitation only part of the system was developed, hence the use of Sub-system. This sub-system covered only customer, product and contract sales information. Contract sales contains information about contract, deliveries and payments while a contract is more about terms and conditions, information about product sold as well as who was the customer who signed the contract. In contract sales a customer makes contract sings it and makes payment, the company delivers products to customer and with the sub-system that is ready now, information about these activities can easily be stored and retrieved any time needed. Being a desktop application, this sub-system has security control that allows users to perform a number of activities according to their rights and the rights are based on position occupied in the organization. Java programming language was used in implementation, eclipse as text editor, Microsoft Access as DBMS, Rational Unified Process as software implementation process and quality standards were applied as well. The implemented sub-system is ready and can be taken into use and it is likely that from the value it will bring to the company, company will decide to finalize its part that is not implemented yet.
Customer discovery and customer validation in Lean software startups
Role of service and data reuse in enterprises
Techniques and practices for software architecture work in agile software development
Successful and efficient adoption of an agile method takes a long time and demands careful preparation and planning. The purpose of this Master's Thesis was to investigate how well the agile process called Scrum would adapt to the product integration environment. Today's software development practices are under constant benchmarking since corporations aspire to improve their productivity. With better processes, organizations are able to produce better quality faster and with less cost. Traditional plan-driven models cannot provide the same kind of fast response time to change as agile processes do. This is the main reason for testing the agile process called Scrum in the product integration environment. In order to measure Scrum, a pilot project was carried out in the client organization. However, it was implemented on team leader level and was not extended to cover the entire organization. The results of the pilot project were gathered by interviewing people involved with project. Observations made during the writing process indicate that Scrum is not suitable for product integration work without modifications. The main reason is that the content of a sprint cannot be frozen for two weeks or more as Scrum requires. However, the results pointed out that many Scrum practices like daily meetings, developer involvement in planning and retrospective meetings would improve productivity. Scrum process also reduced the ad hoc work. A further study is required to evaluate how agile processes would adapt to other productization related organizations. In addition, findings in the pilot indicated that Scrumban process might be more suitable for organizations doing such work as product integration.
Application Lifecycle Management for Safety-Critical Software Development
Foundations of agile Python development
Lean User Experience Design in Practice : A Case Study: Implementing Lean User Experience Design in Software Development
Component-oriented development and assembly : paradigm, principles, and practice using Java
Public Library Information Management System : Developing New Service Delivery Methods
Self-management in distributed systems : smart adaptive framework for pervasive computing environments
Applying test-driven development methodology concepts on BeatAx mobile applications
Communication patterns in distributed software development
Server side collaboration of eLearning platform and integrated development environment
Student perspective on software development, processes and entrepreneurship in Finnish University of Applied Sciences
Agile software maintenance
Development of a framework to study communication barriers in the Distributed Agile Development environment
Agile project and service management : delivering IT services using ITIL, PRINCE2 and DSDM Atern
Designing the requirements : building applications that the user wants and needs / Scott Britton
New agile process errors in software development
The primary purpose of this thesis project was to compare the strengths and weakness of native and web development technologies. The aim was to provide small companies with basic information about these two approaches and to clarify how they can evaluate differences in development costs, licenses, and publishing market costs. The second purpose of this thesis project was to design and implement Fintia's web and mobile (Windows Phone) applications.     The implementation of Fintia's system was based on system and software requirements specification that were discussed and analyzed during autumn 2011 at HAAGA-HELIA University of Applied Sciences.    The various aspects of both native and web environments were described and evaluated ranging from development costs to app store publishing costs and licensing fees.    This thesis project did not cover setting up the environment for developing Fintia's applications, but it demonstrated the development phase from gathering requirements to the actual implementation. The applications have similar functionality on both environment/platforms showing the company's information, product list and products details. The comparison of the development process was discussed and the source codes for the both applications were appended in this thesis.    The web application was tested on most operating systems of smartphones and tablets available on the market and the results show excellent functionality and quality on all the devices. Likewise, the Windows Phone app shows excellent results and brilliant UI/UX. The implemented applications can be taken into use.
Google app inventor for Android
Agile software development teams : the impact of agile development on team performance
Towars a role-based reporting in a multi-system environment : developing Team Foundation Server reporting at Basware Corporation
Portable Sales Web Application
Mobile Decision Support System for Forest Owners and Forest Professionals
On the socio-technical dependencies in free/libre/open source software projects
Building reference development environment in cloud using FreeNest
Handbook of the secure agile software development life cycle
Making user-focused prototype : using design sprint to test, design and prototype mobile app rapidly
Implementing Open Services for Lifecycle Collaboration API for the FreeNest platform
Tin Phong Sales Management System
While previously available methodologies for software – like those published in the early days of object technology – claimed to be appropriate for every conceivable project, situational method engineering (SME) acknowledges that most projects typically have individual characteristics and situations. Thus, finding the most effective methodology for a particular project needs specific tailoring to that situation. Such a tailored software development methodology needs to take into account all the bits and pieces needed for an organization to develop software, including the software process, the input and output work products, the people involved, the languages used to describe requirements, design, code, and eventually also measures of success or failure. The authors have structured the book into three parts. Part I deals with all the basic concepts, terminology and overall ideas underpinning situational method engineering. As a summary of this part, they present a formal meta-model that enables readers to create their own quality methods and supporting tools. In Part II, they explain how to implement SME in practice, i.e., how to find method components and put them together and how to evaluate the resulting method. For illustration, they also include several industry case studies of customized or constructed processes, highlighting the impact that high-quality engineered methods can have on the success of an industrial software development. Finally, Part III summarizes some of the more recent and forward-looking ideas. This book presents the first summary of the state of the art for SME.
Artificial intelligence in poker as a simulation for real life processes
Yhteenveto (Finnish summary)
Adopting agile processes in a software development support organization
Agile project and service management : delivering IT services using ITIL, PRINCE2 and DSDM
Deployment of continuous integration from the perspective of software designer
Development and analysis usability video tool by Prails web Framework
Developing modern industrial control applications : on information models, methods and processes for distributed engineering
Software testing techniques : finding the defects that matter
Making the best of a merger : a case study of Product Data Management Application Development Team
Realtime Web Analytics
The subject of this thesis was to produce a plug-in for the Unity engine that generates three dimensional planetary terrain models suitable to be used in game development. The plug-in has three main parts: a node editor tool within Unity editor that enables visual design of noise functions to be used on the surface, a robust code for generating 3D models during runtime and a dynamic level of detail system. This thesis details the techniques used and the results of the project. The work was based on previous knowledge learned during creating a similar application using Java. The work was implemented using the Unity engine with C# programming language in MonoDevelop development environment. The work resulted in a working plug-in that was released in the Unity Asset Store.
Code level agility and future development of software products
Software patterns, organizational learning and software process improvement
From the early years of modern software development to almost up to millennium the software development was more concentrated on making applications than making the whole application lifecycle. All the parts of the application lifecycle have been existent but they have not been merged into one entity like ALM process (application lifecycle management) is doing now.    In general ALM process is divided into three main phases which Wikipedia has defined as governance, development and maintenance. Most manufacturers define and name these parts differently, which should be taken into account when discussing ALM solution with different companies or people. There is also another process called SDLC (software devel-opment lifecycle) which has been mistakenly understood equivalent with ALM. Generally speaking, SDLC covers only one part of ALM which is development.    What is ALM process anyway? If you search on the internet you get multiple answers which vary. In brief it can be defined as integrating multiple software development tools into one framework or solution where all tools interact with each other real-time. If you also include business management and engineering skills to this environment you are close to ALM.    What people or companies benefit from ALM process? ALM at its best integrates the whole application lifecycle management, automates processes and integrates tools that are related to each other. This also means that sending emails, making phone calls and having meetings about everything will not be necessary anymore. Thus, a lot of money and time will be saved.
It is fair to say that Agile development is today's major trend. It is used more or less in every company if the company is involved in mobile software industry. Agile development is also widely used in other embedded software development. It is recognized to be a very effective and efficient way of development. However, there are many issues which are needed to be considered and taken into account when transferring to this process model. Especially the transferring period can be very difficult and have a long lasting effect to a company. The aim of this Master's thesis was to study more deeply this subject and find a different way to conquer the challenges what comes to this subject. There are so many positive experiences from this, but normally some of the negative sides have been left out. I have experienced a transfer in my own career and I saw really close what kind of things are usually left out and not told. The second aim of this thesis was to investigate how well Agile methods suit in embedded software development. Agile works well what comes just to software projects, but when talking about embedded development, the process is not always so easy. Embedded devices vary for example from small music players to big and complex medical devices. This thesis will concentrate only on small portable devices, since my experience comes from that field. I used mainly my own experiences and situations I have met to find a suitable process. In theory parts I used different publications from the Internet and books to back up my knowledge. I managed to present basic practices and processes from different methodologies that I discovered as good in embedded development. Next steps would be to test these different processes in practice. Since there are many different kinds of embedded systems out there, every modified process has to be first tested in a real life before it can be decided whether can it be taken in to use or not.
RPG Upcycler : a continuation to model driven engineering
Technical excellence in agile software projects
From test generation to test execution in a model-based testing
Evaluation of a product platform strategy for analytical application software
Challenges in managing large-scale agile software development transformation
Augmented reality
Genetic algorithms in software architecture synthesis
From Sequential Waterfall to Agile Scrum in software development
Comparing Google's Android and Apple's iOS Mobile Software Development Environments
Semantic visualization for smart spaces : merging the material and digital worlds
Rapid application development and MS Access
Developing Electronic Governance Services with Intalio|Create
The importance of advisory services for forest owners and forest management planning are emphasized in the Finnish forest policy. One of the objectives set is renewing services used in forest management planning and advisory services. A forest management plan forms the basis of information for forest owners. However, many forest owners have not made use of forest management planning services. In 2009, North Karelia University of Applied Sciences started a project called Mobidec, which had an objective to develop a mobile system supporting the decision making of forest owners and forest professionals. The service developed was assumed to be most useful for those forest owners, whose forest management plan is out-dated or there is no forest management plan at all. This thesis was commissioned by the Mobidec project. The purpose of this thesis was to define the information provided by the developed system and specify the technical solutions to be used in development of Mobidec. The specifications stage and the actual development process of Mobidec are described in this thesis. The methods used in this thesis were those methods of software development. The Mobidec project resulted in a cross platform capable service, which provides comprehensive information on a measured compartment unit. Presumably, Mobidec will have positive effects on advisory services and timber sales.
Portability of Qt applications in the mobile environment
Improving GUI application development using Qt Quick
Measuring in the software process : how practice meets theory
Improving effort management in software development projects
Development of continuous integration framework for external partners
React : up & running : building web applications
Userlutions GmbH is a young innovative company which specializes in testing and optimization of website and promotional product. Working as an ambition agency, combining a scientific and pragmatic approach, Userlutions GmbH starts with providing a great consulting and testing service at the good price to assist customer obtaining a maximum benefit. The most well-known product is the online usability test at web address: RapidUsertests.com which is one of the market leader usability testing tool, was published in 2010. In the autumn of 2013, Userlutions GmbH renovated and present various modules to response the demand of market. One of them is an analysis usability video tool that is used as the object of this thesis. It is commissioned to Userlutions GmbH, based in Berlin, Germany. The main purpose of the thesis is illustrating the developing process in order to meet the predefined requirements from Userlutions for its analysis usability video tool. The software development lifecycle, tools also have been explained to provide a clearly view of inside developing process from design to deployment. The major development tools are Prails web framework, various jQuery library and MySQL database. The theoretical part discusses about user-centered design which was has been applied in design analysis video tool. In addition, qualitative is the major research method included interview with client and market research. Books, digital articles, documentation on internet and advices of colleges and supervisor are used as the main resource of this paper. As the main results, the analysis usability video tool has been completed on time with the good feedback from client. Although there are some changes which have been made during project due to optimization reason, the final product responded all pre-defined requirements.
Technical Excellence in Agile Software Projects
Towards a framework for improving software development process mediated with CMMI goals and agile practices
Professional Scrum with Team Foundation Server 2010
Why do software development projects fail? : emphasising the supplier's perspective and the project start-up
Software development methods in the industry : evaluation on the usage for GERAN protocol software development
Abstract: Developing M2M applications with Mango.
Value stream mapping of a mobile network element software : feature development  cycle using Lean development concept
Scalable high performing software teams
Criteria for the evaluation of requirements management tools supporting distributed software product line engineering and management
Abstract: The purpose of this thesis project was to design a plug-in, which integrates a locally installed Eclipse IDE with a remote exercise management system. The client of this project was Viope Solutions OY, an online based eLearning service provider company located in Helsinki Finland. The user groups of the service are students and individuals. This project was carried out using Eclipse plug-in Development Environment (PDE) and different programming technologies such as Java technology, Standard Widget Toolkit (SWT), and XML parsing. In this project there are three plug-in solutions such as: login, chapter and exercise selector,and exercise sender. Each plug-in solution has been integrated with client's already existing system, and tested using dummy data files. As a result, the requirements set for this project have been accomplished. Also additional features, such as enabling users to access exercises from Eclipse IDE main tool bar, were  realized. The plug-ins designed may be useful in facilitating the client's existing exercise handling process. However, only these solutions may not be enough to increase the productivity of the company. Therefore, it is recommended that additional plug-ins with multiple functionalities should be added in future.
Value Stream Mapping of a mobile network element software - feature development
In today's fashion industry, email is primarily used as an official communication tool. Currently, fashion industry specific or customized tools are not available for communication in a distributed environment. This thesis aims to develop a web application, which will be specially made for the fashion industry.
Organizational transformation from tailored software production to international Modified-Off-The-Shelf software business model
Social psychology of persuasion applied to human-agent interaction
Hospital Management Software Development
JIRA 4 essentials : track bugs, issues, and manage your software development projects with JIRA
Transformation from waterfall to agile : eliminate waste, create value
A web-based reservation system : with PHP and MySQL
Experiences of new approaches to UI software development : comparing the waterfall and agile processes
Social construction of quality in software development
ClearCase UCM in incremental software development
The developer's guide to debugging
Software development process modeling : developers perspective to contemporary modeling techniques
Adopting Scrum in supporting and developing legacy software systems
Using ALM tool in quality assurance and cost-effectiveness development
Effective multi-site and multi-country distributed software development
Mobile Linux application development process for Android operating system
Requirement's engineering in distributed software projects
Software architecture : organizational principles and patterns
Global software engineering : challenges and solutions framework
Tiivistelmä: Building reference development environment in cloud using FreeNest.
Advanced software testing. Vol. 2 : Guide to the ISTQB Advanced Certification as an Advanced Test Manager
Usability in incremental software design : a use case method
Simulation Aided Product Software Development
Turning IP information into a competitive advantage
Customized agile development process for embedded software development
Developing cloud software : algorithms, applications, and tools
Native and web technologies in smartphone software development : case study: Fintia Oy
Empirical studies on software quality construction : exploring human factors and organizational influences
Software creativity 2.0
Professional mobile web development with WordPress, Joomla! and Drupal
Electronic Photo Frame
A rugged nation
Productivity measurement in a software development organization
Data management application with ASP.NET MVC3
Software development and professional practice
Factors causing human resource turnover in software industry in Pakistan
Evaluating agile methods and their implementations
Interactive system design : innovative user interfaces
Client side collaboration of eLearning platform and integrated development environment
Tiivistelmä: Implementing Open Services for Lifecycle Collaboration API for the FreeNest platform.
Advanced software testing. Vol. 1 : Guide to the ISTQB Advanced Certification as an Advanced Test Analyst
Seamless integration of MetaEdit+ and eclipse to combine modeling and coding
Situational method engineering
Analyzing and designing a web application for fashion industry
Agile development and testing in embedded systems
Agile testing : how a tester's role Is changing in software development projects
Agile backlog management : case Nordea Netbanking
Producer in a Game Project : A Game Producer’s Workflow Case: Under
Model-driven development of control applications : modeling tools, simulations and safety
React Native for iOS developers
Software development practices are under constant benchmarking and corporations aspire to improve productivity by collecting metrics. Valid, comparable metrics can act as support in decision making when selecting subcontractors and they can benefit by helping to indicate various kinds of issues in Research & Development processes. The objective of the thesis was to clarify the present situation and to collect a list of improvement items, and then with these findings to aim to develop a model for evaluating the projects. The present status was assessed by interviewing people involved with project work and metrics development. As a solution, a proposal on how a set of project types should be identified and only compare matching projects within each type was formed. The different kinds of essential project metrics were also studied. In addition, a proposal for productivity metrics model was created. The purpose of the metric is to evaluate a project team's performance and, if needed, to monitor velocity. The proposal is a combination of other widely-known productivity metrics. Observations made during the writing process indicate that the metrics process has been studied extensively by the company and the process is still under constant development. One of the reasons for this is that development teams are now using Agile development processes instead of the more familiar waterfall model. However, there was room for improvement and the models introduced in this thesis will be piloted with selected projects. The models will be developed further according to the findings from the pilots.
A beginner's guide to programming logic and design : introductory
Developing a pricing tool for Flander Oy
Measurement-based management of global software development projects
Developing M2M applications with Mango
Developing a Reclaim Information System : Case: Lemminkäinen Betonituote
Maximizing Customer Value: Better Software and Web Solutions through Iteration of Use Cases
Mobile devices have become extremely popular during the past few years. They are used widely in business and everyday life by the young and the elderly. As the mobile devices and their operating systems have developed, the manufacturers have made it possible also for everyday users to create their own applications using specific Software Development Kits. For that reason, it is now common that applications are created not only by third party companies but also by everyone interested in the matter. The mobile business has come to a point where there are a few big companies responsible for developing the operating systems used by most hardware manufacturers. Of all the operating systems, there are two which have grown their market share during the past few years: Apple's iOS and Google's Android. The purpose of this thesis was to compare the two, finding out how easy they are to take into use, and to develop and publish applications with. The study was carried out as an empirical research. The research was made on both operating systems and the SDKs. Based on that knowledge, applications were created and published for both systems. The basic outline of the study was installing and working with both SDKs, developing and publishing applications using the SDKs, and estimating the costs of installing development kits in an educational environment. The objectives of this study were achieved as planned: both SDKs were successfully installed, four applications were created altogether, an estimation of costs was made and overall experience of both systems was gained.
Agile software development : principles, patterns, and practices
Lonely homes
Building standard in COMOS
Agile Testing – How a Tester’s Role Is Changing in Software Development Projects
"Hit the ground running with React, the open-source technology from Facebook for building rich web applications fast. With this practical guide, Yahooweb developer Stoyan Stefanov teaches you how to build components--React's basic building blocks--and organize them into maintainable, large-scale apps. If you're familiar with basic JavaScript syntax, you're ready to get started. Once you understand how React works, you'll build a complete custom Whinepad app that helps users rate wines and keep notes. You'll quickly learn why some developers consider React the key to the web app development puzzle"--
Context-aware mobile application prototype : backend implementation
Methods for improving software development process
Agile and Iterative Requirement Definition : Efficient requirement definition in Agile and Iterative software development
Modelling and introducing DSP software engineering process
Developing a business information system : case: Work practice placement management tool for Oulu Vocational College, Department of Social and Health Care, Kontinkangas Unit
An intention-driven approach for usability-related requirements engineering : interaction design of innovative software products for consumer market.
Enhanced testing automation proof of concept for FreeNest
Abstract: The project goal was to provide the PHP software programming course materials, for a company called Viope Solutions Oy and to develop an Eclipse plug-in for the collaboration of Eclipse editor and their server. In this paper, the concept of E-learning system is briefly discussed, and the company's current system is also demonstrated along with the PHP course material that was developed for it. Demonstrating a plug-in that was developed for facilitating this system is also the other purpose. The development of plug-in was proved to be of great importance, because it helps users of this system to use the widely used Eclipse editor to perform programming exercises. The application, therefore, should improve the popularity of the company and increase their efficiency. The proposed solution is based on our experience as students on the editor and on the fact that it is a well known one. By the help of this project, it was proved that it is possible to integrate the Eclipse editor with the current system by developing a plug-in for it, which in turn yields a great result.
Self-organizing software architectures
Augmented Reality
Windows phone 7 programming for Android and iOS developers
In legacy system modernization projects, using model driven engineering, models are created from legacy systems and are used to create model driven systems. First the legacy system is modeled, then will be transformed into a partially or completely platform independent model. After development, it can be executed into a Model driven system; achieved with Model driven engineering (MDE). This method is validated with the MDE Tool of a Dutch IT company called Thinkwise Software. The tool is made by Sander Goos (Senior Product Innovation Specialist) as his thesis which is called   ”A model driven approach to modernizing legacy systems”. The tool itself is called Access Upcycler. Even though Thinkwise has a tool for legacy system modernization, it did not cover all the old systems such as the RPG Systems..     In this thesis I have researched to which extent RPG systems can be modeled and transformed to conform to the structures of the development tool of Thinkwise Software. I have also created an MDE tool called RPG Upcycler to automate the modeling and transformation of RPG systems with it. The tool has been created to the extent possible within the possibilities to output information from RPG systems.      I will present my research related to the extent, the MDE tool to modernize RPG systems was possible to be made and the technical work related to its creation done. The research was done at Thinkwise Software in Apeldoorn, Netherlands between 01/2012 - 04/2012.      This thesis should be understandable for IT students and easily readable for Professionals.
Towards better usability : usability and end-user participation in healthcare information technology systems development
Software evolution and feedback : theory and practice
Abstract:
Project evaluation model
Adoption of agile software development in Vietnam
Applying agility to a product integration organization
Improving browser-based UI test automation : Konecranes case study
Procedural planet generation in game development
Software design and implementation using behaviour-driven development and test-driven development
Practical enterprise software development techniques : tools and techniques for large scale solutions
Developing security in the system development life cycle : Agenteq Solutions Oy
Emerging methods, technologies and process management in software engineering
Write portable code : an introduction to developing software for multiple platforms
Software in 30 days : how agile managers beat the odds, delight their customers, and leave competitors in the dust
Team-client relationships and extreme programming
Idea to iPhone : the essential guide to creating your first app for the iPhone and iPad
Widget development for S60 Web Run-Time
Activity tracker : Windows Phone 8 application
The ability to deliver great value with short lead times at reasonable cost to customers is the crucial success factor in today's fast changing markets. Companies that apply traditional software development practices like waterfall processes need to often transform to lean and agile software development to maintain competitiveness. An execution of a current state analysis can discover many issues in the software development processes. This applies especially for an environment, where waterfall software development methods prone to creation of waste, are applied. In order that a company can fully focus on value creation, waste must be recognized and eliminated and agile practices taken in to use. A case example explains how close customer collaboration helped to turn customer dissatisfaction to customer delight. The main goal in this real customer case was to deliver the requested software features fast providing maximum value to the customer. This was achieved by applying enterprise agile concepts, which are explained in this master's thesis in addition to team level agile concepts like scrum. In order to systematically introduce the new practices, a transformation project should be established. Kotter's “Leading Change” provides a comprehensive eight stage model that can be also applied by agile transformation project. In the end the master thesis is concluded by listing the top ten best practices for software development.
Pro React
An empirical evaluation of specification-based unit testing tools
Agile product management with Scrum : creating products that customers love
A light-weight approach to developing interactive model transformations
Experiences of New Approaches to UI Software Development: Comparing the Waterfall and Agile Processes
